{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/Jam3/camera-project\">camera-project</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>Projects a 3D world point into 2D window space. </p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;mat4&#xA0;=&#xA0;require(&apos;gl-mat4&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;project&#xA0;=&#xA0;require(&apos;camera-project&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//projection&#xA0;*&#xA0;view&#xA0;matrix</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;combinedProjView&#xA0;=&#xA0;mat4.multiply([],&#xA0;projection,&#xA0;view)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//viewport&#xA0;bounds</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;viewport&#xA0;=&#xA0;[x,&#xA0;y,&#xA0;width,&#xA0;height]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//3D&#xA0;world&#xA0;point</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;point&#xA0;=&#xA0;[0,&#xA0;-1,&#xA0;2.5]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//vec4&#xA0;output</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;output&#xA0;=&#xA0;[]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>project(output,&#xA0;point,&#xA0;viewport,&#xA0;combinedProjView)</span></span></div>\n</code></pre>\n<p>The output <code>z</code> component contains the window space depth, and <code>w</code> is the value of <code>(1 / clip.w)</code>. Assumes <a href=\"https://www.opengl.org/wiki/GLAPI/glDepthRange\">depth range</a> is 0 to 1.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://www.npmjs.com/package/camera-project\"></a></p>\n<h4 id=\"vec4-project-out-point-viewport-combined-\"><code>vec4 = project(out, point, viewport, combined)</code></h4>\n<p>Projects the 3D <code>point</code> into window space using the <code>viewport</code> bounds (screen x, y, width, height) and <code>combined</code> matrix (result of multiplying <code>projection * view</code> matrices). </p>\n<p>The result is stored in <code>out</code> and returned.</p>\n<h2 id=\"see-also\">See Also</h2>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/camera-unproject\">camera-unproject</a></li>\n</ul>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/Jam3/camera-project/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}