{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/shama/first-person-camera\">first-person-camera</a><div class=\"contrib\"></div></h1>\n<p>A generic first person camera for WebGL.</p>\n<p><a href=\"https://nodei.co/npm/first-person-camera\"></a></p>\n<h2 id=\"example\">example</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createCamera&#xA0;=&#xA0;require(&apos;first-person-camera&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;viewer&#xA0;=&#xA0;require(&apos;mesh-viewer&apos;)({</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;clearColor:&#xA0;[0.2,&#xA0;0.3,&#xA0;0.8,&#xA0;1],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;pointerLock:&#xA0;true,</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;bunny</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>viewer.on(&apos;viewer-init&apos;,&#xA0;function()&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;this.camera&#xA0;=&#xA0;createCamera()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;bunny&#xA0;=&#xA0;this.createMesh(require(&apos;bunny&apos;))</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>viewer.on(&apos;gl-render&apos;,&#xA0;function()&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;bunny.draw()</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>viewer.on(&apos;tick&apos;,&#xA0;function()&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;if&#xA0;(this.pointerLock)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;this.camera.control(this.frameTime,&#xA0;[</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;this.down(&apos;W&apos;),&#xA0;this.down(&apos;S&apos;),</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;this.down(&apos;A&apos;),&#xA0;this.down(&apos;D&apos;),</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;this.down(&apos;space&apos;),&#xA0;this.down(&apos;shift&apos;),</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;],&#xA0;this.mouse,&#xA0;this.prevMouse)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;}</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div>\n</code></pre>\n<h2 id=\"install\">install</h2>\n<pre><code class=\"lang-shell\"><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install&#xA0;first-person-camera</span></span></div>\n</code></pre>\n<h2 id=\"api\">api</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createCamera&#xA0;=&#xA0;require(&apos;first-person-camera&apos;)</span></span></div>\n</code></pre>\n<h3 id=\"var-camera-createcamera-opts-\"><code>var camera = createCamera(opts)</code></h3>\n<p>Create a first person style camera. Each of the following options are optional:</p>\n<ul>\n<li><code>position</code> {vec3} Initial position of the camera.</li>\n<li><code>rotation</code> {vec3} Initial rotation of the camera.</li>\n<li><code>positionSpeed</code> {float} The speed in which the position moves.</li>\n<li><code>rotationSpeed</code> {float} The speed in which the camera rotates.</li>\n</ul>\n<h3 id=\"camera-position\"><code>camera.position</code></h3>\n<p>A <code>vec3</code> or <code>[x,y,z]</code> of the position of the camera. The position can be obtained or set manually through this property.</p>\n<h3 id=\"camera-rotation\"><code>camera.rotation</code></h3>\n<p>A <code>vec3</code> or <code>[x,y,z]</code> of the rotation of the camera in radians. The rotation can be obtained or set manually through this property.</p>\n<h3 id=\"camera-control-frametime-direction-mouse-prevmouse-\"><code>camera.control(frameTime, direction, mouse, prevMouse)</code></h3>\n<p>A convenience method for connecting controls to the camera.</p>\n<ul>\n<li><code>frameTime</code> The delta time that has changed in milliseconds.</li>\n<li><code>direction</code> Array of booleans in which direction to move: <code>[forward, backward, left, right, up, down]</code></li>\n<li><code>mouse</code> Array of <code>[x,y]</code> coordinates of the current mouse position.</li>\n<li><code>prevMouse</code> Array of <code>[x,y]</code> coordinates of the mouse position from the previous frame.</li>\n</ul>\n<h3 id=\"camera-move-direction-\"><code>camera.move(direction)</code></h3>\n<p>Moves the camera by the direction <code>[x,y,z]</code>.</p>\n<h3 id=\"camera-pointer-mouse-prevmouse-\"><code>camera.pointer(mouse, prevMouse)</code></h3>\n<p>Rotates the camera based on the mouse vector. Both <code>mouse</code> and <code>prevMouse</code> are <code>[x,y]</code> coordinates.</p>\n<h3 id=\"camera-view-out-\"><code>camera.view([out])</code></h3>\n<p>Retrieve the view matrix for the camera.</p>\n<h2 id=\"license\">license</h2>\n<p>(c) 2015 Kyle Robinson Young. MIT License</p>\n"}