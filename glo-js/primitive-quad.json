{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/glo-js/primitive-quad\">primitive-quad</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p><iframe scrolling=\"no\" seamless=\"seamless\" src=\"http://glo-js.github.io/primitive-quad/\"></iframe></p>\n<p><a href=\"http://glo-js.github.io/primitive-quad/\">(demo)</a></p>\n<!-- iframe: http://glo-js.github.io/primitive-quad/index.html -->\n<p>Creates an indexed quad mesh (two triangles), with normals and UVs. It sits on the XY plane with <code>Z=0</code>, and positions ranging from <code>-1.0</code> to <code>1.0</code>.</p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;mesh&#xA0;=&#xA0;require(&apos;primitive-quad&apos;)()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;the&#xA0;simplicial&#xA0;complex</span></span></div><div class=\"line\"><span class=\"source js\"><span>console.log(mesh.positions,&#xA0;mesh.cells)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;rendering&#xA0;attributes</span></span></div><div class=\"line\"><span class=\"source js\"><span>console.log(mesh.uvs)</span></span></div><div class=\"line\"><span class=\"source js\"><span>console.log(mesh.normals)</span></span></div>\n</code></pre>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://www.npmjs.com/package/primitive-quad\"></a></p>\n<h4 id=\"mesh-quad-scale-\"><code>mesh = quad([scale])</code></h4>\n<p>Creates a new indexed quad along the XY plane, with an optional <code>scale</code> number (defaults to 1).</p>\n<p><code>scale</code> can also be an <code>[x, y]</code> array to scale each axes independently.</p>\n<p>The vertices are in counter-clockwise order, the UV origin is top-left (0 - 1 range), and the normals are negative along the Z axis.</p>\n<p>The returned mesh is an object with the following data:</p>\n<pre><code>{\n  positions: [ [x, y, z], [x, y, z], ... ],\n  cells: [ [a, b, c], [a, b, c], ... ],\n  uvs: [ [u, v], [u, v], ... ],\n  normals: [ [x, y, z], [x, y, z], ... ]\n}\n</code></pre><h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/glo-js/primitive-quad/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}