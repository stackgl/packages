{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/Erkaman/glsl-worley\">glsl-worley</a><div class=\"contrib\"></div></h1>\n<p><iframe scrolling=\"no\" seamless=\"seamless\" src=\"http://erkaman.github.io/glsl-worley/\"></iframe></p>\n<p>From this module, a GLSL implementation of Worley Noise written by <a href=\"http://webstaff.itn.liu.se/~stegu/GLSL-cellular/GLSL-cellular-notes.pdf\">Stefan\nGustavson</a> can be imported.</p>\n<p>A demo can be found <a href=\"http://erkaman.github.io/glsl-worley/\">here</a></p>\n<h2 id=\"usage\">Usage</h2>\n<p>This module provides four functions, and they can be exported as</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;worley3D&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>glsl-worley/worley3D.glsl</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;worley2x2x2&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>glsl-worley/worley2x2x2.glsl</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;worley2D&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>glsl-worley/worley2D.glsl</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;worley2x2&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>glsl-worley/worley2x2.glsl</span></span><span>)</span><span>&#xA0;</span></span></div>\n</code></pre>\n<p>And then they can easily be used to generate a texture in a shader by doing something like:</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec2</span></span><span>&#xA0;F&#xA0;=&#xA0;worley3D(vPosition,&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>,&#xA0;</span><span class=\"constant language c\"><span>false</span></span><span>);</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;F1&#xA0;=&#xA0;F</span><span class=\"keyword operator glsl\"><span>.x</span></span><span>;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;F2&#xA0;=&#xA0;F</span><span class=\"keyword operator glsl\"><span>.y</span></span><span>;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;&#xA0;</span><span class=\"support variable glsl\"><span>gl_FragColor</span></span><span>&#xA0;=&#xA0;</span><span class=\"storage type glsl\"><span>vec4</span></span><span>(</span><span class=\"storage type glsl\"><span>vec3</span></span><span>(F2-F1),&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>);</span></span></div>\n</code></pre>\n<p><code>worley3D</code> is defined as <code>vec2 worley3D(vec3 P, float jitter, bool manhattanDistance)</code>. It returns a <code>vec2</code>\n where <code>x</code> is <code>F1</code> and <code>y</code> is <code>F2</code>(it is assumed that the reader knows the meaning of these two).\n<code>P</code> is the input point, <code>jitter</code> is the amount of jitter in the pattern, and if <code>manhattanDistance</code> is true,\nthen a manhattan distance is used to generate the pattern, instead of the usual Euclidean distance(this basically makes\n the noise appear more &quot;jagged&quot;).</p>\n<p> The remaining three functions take the same arguments, except that in the case of <code>worley2D</code> and <code>worley2x2</code>, <code>P</code> is a\n <code>vec2</code>.</p>\n<p> <code>worley2x2x2</code> is basically a faster version of <code>worley3D</code>. But be aware that it has some artifacts. In the same manner,\n <code>worley2x2</code> is basically a faster version of <code>worley2D</code>, but with some potential artifacts.</p>\n"}