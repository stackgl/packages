{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/Erkaman/glsl-cos-palette\">glsl-cos-palette</a><div class=\"contrib\"></div></h1>\n<p><code>cosPalette</code> is a simple shader function that is defined as</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>vec3</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>cosPalette</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;t,&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;a,&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;b,&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;c,&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;d&#xA0;</span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"keyword control glsl\"><span>return</span></span><span>&#xA0;a&#xA0;+&#xA0;b*</span><span class=\"support function C99 c\"><span>cos</span></span><span>(&#xA0;</span><span class=\"constant numeric c\"><span>6.28318</span></span><span>*(c*t+d)&#xA0;);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div>\n</code></pre>\n<p>where <code>a,b,c,d</code> are RGB-colors. This function can be used to make very compact color palettes.\nA simple editor for making such palettes is provided <a href=\"http://erkaman.github.io/glsl-cos-palette/\">here</a>.</p>\n<p>The function <code>cosPalette(t, a, b,  c, d )</code>, which is the palette, will basically assign a color to every value <code>t</code>, which is in the range <code>[0,1]</code>. So if you set <code>t</code> to be the value of some noise function(say, Perlin noise) in range <code>[0,1]</code>, you can use this\npalette to make simple procedural textures. The palette will basically colorize the noise. In the fragment shader, we can easily procedurally generate a texture by doing something like</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;t&#xA0;=&#xA0;noise(vPosition);</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;tex&#xA0;=&#xA0;cosPalette(t,&#xA0;uAColor,&#xA0;uBColor,&#xA0;uCColor,&#xA0;uDColor&#xA0;);</span></span></div>\n</code></pre>\n<p>Credit goes to <a href=\"http://www.iquilezles.org/www/articles/palettes/palettes.htm\">Inigo Quilez</a> for coming up with this technique.</p>\n<p>If even more advanced palettes are desired, they can be created using <a href=\"https://github.com/Erkaman/glsl-gradient-palette\">glsl-gradient-palette</a></p>\n<iframe scrolling=\"no\" seamless=\"seamless\" src=\"http://erkaman.github.io/glsl-cos-palette/\"></iframe><h2 id=\"examples\">Examples</h2>\n<p>Below are some examples of palettes</p>\n<p><code>cosPalette(t,vec3(0.2,0.7,0.4),vec3(0.6,0.9,0.2),vec3(0.6,0.8,0.7),vec3(0.5,0.1,0.0))</code></p>\n<p><img src=\"https://raw.githubusercontent.com/Erkaman/glsl-cos-palette/master/images/f.png\" width=\"356\" height=\"366\"></p>\n<p><code>cosPalette(t,vec3(0.2,0.5,0.3),vec3(0.0,0.5,0.7),vec3(1.0,1.0,1.0),vec3(0.0,0.3,0.7))</code></p>\n<p><img src=\"https://raw.githubusercontent.com/Erkaman/glsl-cos-palette/master/images/g.png\" width=\"356\" height=\"366\"></p>\n<p><code>cosPalette(t,vec3(0.6,0.0,0.0),vec3(1.0,0.0,0.0),vec3(1.0,0.0,0.0),vec3(1.0,0.0,0.0))</code></p>\n<p><img src=\"https://raw.githubusercontent.com/Erkaman/glsl-cos-palette/master/images/h.png\" width=\"356\" height=\"366\"></p>\n<p><code>cosPalette(t,vec3(1.0,0.4,0.0),vec3(0.4,0.8,0.0),vec3(0.5,0.3,0.9),vec3(0.9,0.6,0.9))</code></p>\n<p><img src=\"https://raw.githubusercontent.com/Erkaman/glsl-cos-palette/master/images/j.png\" width=\"356\" height=\"366\"></p>\n<p><code>cosPalette(t,vec3(0.4,0.3,0.1),vec3(0.1,0.1,0.1),vec3(0.4,0.4,0.4),vec3(0.0,0.0,0.0))</code></p>\n<p><img src=\"https://raw.githubusercontent.com/Erkaman/glsl-cos-palette/master/images/l.png\" width=\"356\" height=\"366\"></p>\n"}