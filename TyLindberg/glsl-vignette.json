{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/TyLindberg/glsl-vignette\">glsl-vignette</a><div class=\"contrib\"></div></h1>\n<p>A GLSL function for computing vignette values from UV coordinates. Designed to work with <a href=\"https://github.com/glslify/glslify\">glslify</a>. To test out how the different vignettes look, a demo can be found <a href=\"https://tylindberg.github.io/glsl-vignette/\">here</a>.</p>\n<p><a href=\"https://nodei.co/npm/glsl-vignette/\"></a></p>\n<iframe scrolling=\"no\" seamless=\"seamless\" src=\"https://tylindberg.github.io/glsl-vignette/\"></iframe><h2 id=\"usage\">Usage</h2>\n<h3 id=\"-pragma-glslify-vignette-require-glsl-vignette-simple-\"><code>#pragma glslify: vignette = require(glsl-vignette/simple)</code></h3>\n<h4 id=\"float-vignette-vec2-uv-float-radius-float-smoothness-\"><code>float vignette(vec2 uv, float radius, float smoothness)</code></h4>\n<p>Returns a value from 0 to 1 (black to white) corresponding to the intensity of the vignette at that UV coordinate.</p>\n<p><code>uv</code> - UV coordinates, expected to be in the range 0 to 1 on both axes.</p>\n<p><code>radius</code> - the vignette&apos;s radius in UV coordinates. A radius of 0.5 results in a vignette that will just touch the edges of the UV coordinate system.</p>\n<p><code>smoothness</code> - how quickly the vignette fades in. The vignette will start fading in at <code>radius - smoothness</code> and be fully opaque at <code>radius + smoothness</code> from the center. A value of zero results in a hard edge.</p>\n<h4 id=\"example-\">Example:</h4>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;vignette&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>glsl-vignette</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>sampler2D</span></span><span>&#xA0;tex;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>varying</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>vec2</span></span><span>&#xA0;uv;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>void</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>main</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;vignetteValue&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vignette</span></span><span>(</span></span><span>uv,&#xA0;</span><span class=\"constant numeric c\"><span>0.5</span></span><span>,&#xA0;</span><span class=\"constant numeric c\"><span>0.5</span></span><span>);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"support variable glsl\"><span>gl_FragColor</span></span><span>&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>texture2D</span></span><span>(</span></span><span>tex,&#xA0;uv)&#xA0;*&#xA0;vignetteValue;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div>\n</code></pre>\n<h3 id=\"-pragma-glslify-vignette-require-glsl-vignette-advanced-\"><code>#pragma glslify: vignette = require(glsl-vignette/advanced)</code></h3>\n<h4 id=\"float-vignette-vec2-uv-vec2-size-float-roundness-float-smoothness-\"><code>float vignette(vec2 uv, vec2 size, float roundness, float smoothness)</code></h4>\n<p>Returns a value from 0 to 1 (black to white) corresponding to the intensity of the vignette at that UV coordinate. Allows for fine-grained control of the vignette shape and size.</p>\n<p><code>uv</code> - UV coordinates, expected to be in the range 0 to 1 on both axes.</p>\n<p><code>size</code> - the size of the vignette in the form (width / 2, height / 2). To make a vignette that starts fading in halfway between the center and edges of UV space you would pass in <code>vec2(0.25, 0.25)</code>.</p>\n<p><code>roundness</code> - how round the vignette will be. A value from 0 to 1 where 1 is perfectly round (forming a circle or oval) and 0 is not round at all (forming a square or rectangle).</p>\n<p><code>smoothness</code> - how quickly the vignette fades in. The vignette will start fading in at the edge of the values provided by <code>size</code>, and will be fully faded in at <code>vec2(size.x + smoothness, size.y + smoothness)</code>. A value of zero results in a hard edge.</p>\n<h4 id=\"example-\">Example:</h4>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;vignette&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>glsl-vignette/advanced</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>sampler2D</span></span><span>&#xA0;tex;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>varying</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>vec2</span></span><span>&#xA0;uv;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>void</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>main</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>&#xA0;Create&#xA0;a&#xA0;boxy&#xA0;vignette&#xA0;that&#xA0;is&#xA0;wider&#xA0;than&#xA0;it&#xA0;is&#xA0;tall</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;vignetteValue&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vignette</span></span><span>(</span></span><span>uv,</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec2</span></span><span>(</span></span><span class=\"constant numeric c\"><span>0.4</span></span><span>,&#xA0;</span><span class=\"constant numeric c\"><span>0.3</span></span><span>),&#xA0;</span><span class=\"constant numeric c\"><span>0.7</span></span><span>,&#xA0;</span><span class=\"constant numeric c\"><span>0.1</span></span><span>);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"support variable glsl\"><span>gl_FragColor</span></span><span>&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>texture2D</span></span><span>(</span></span><span>tex,&#xA0;uv)&#xA0;*&#xA0;vignetteValue;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div>\n</code></pre>\n"}