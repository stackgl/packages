{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mattdesl/shadertoy-export\">shadertoy-export</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>A small utility for exporting ShaderToy demos to large (print-ready) PNG images. On my MacBookPro, this can export up to 10,000x10,000 px images.</p>\n<p>It only features a small set of shaders (those set to <code>Public + API</code>) and doesn&apos;t support cube maps, video inputs, etc.</p>\n<p><strong>This tool is experimental and not complete.</strong> If you want to help maintain it, let me know.</p>\n<p>Some examples:</p>\n<p><img src=\"http://i.imgur.com/HXcu8WP.jpg?1\" alt=\"image\"></p>\n<p>A <a href=\"http://i.imgur.com/F1sw16z.jpg\">2880x1800 wallpaper</a> from <a href=\"https://www.shadertoy.com/view/XtjSDK\">this shader</a>.</p>\n<p><img src=\"http://i.imgur.com/F1sw16z.jpg\" alt=\"two\"></p>\n<h2 id=\"install\">Install</h2>\n<p>Install the tool globally with npm.</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install&#xA0;shadertoy-export&#xA0;-g</span></span></div>\n</code></pre>\n<h2 id=\"command-line-usage\">Command-Line Usage</h2>\n<p><em>More docs to follow.</em></p>\n<p>Basic usage, writes the first frame to process.stdout as PNG.</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>shadertoy-export&#xA0;shader.frag&#xA0;[opts]&#xA0;&gt;&#xA0;image.png</span></span></div>\n</code></pre>\n<p>You can use <code>--api</code> or <code>-a</code> to grab from the ShaderToy API, which loads demos that are saved as <code>Public + API</code>. For this, you need to specify a demo ID like <code>XslGRr</code>, or a URL like <a href=\"https://www.shadertoy.com/view/XslGRr\">https://www.shadertoy.com/view/XslGRr</a>. Example:</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>shadertoy-export&#xA0;XslGRr&#xA0;--api&#xA0;&gt;&#xA0;image.png</span></span></div>\n</code></pre>\n<p>You can use <code>--output</code> or <code>-o</code> instead of writing to stdout, and <code>--size</code> to render a different resolution. You can use <code>--wait</code> to wait N milliseconds before rendering a frame.</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>shadertoy-export&#xA0;XslGRr&#xA0;--api&#xA0;--output&#xA0;output/1.png&#xA0;--size&#xA0;1080,768&#xA0;--wait&#xA0;1500</span></span></div>\n</code></pre>\n<h4 id=\"interactive-mode\">interactive mode</h4>\n<p>You can also enter interactive (GUI) mode with the <code>--frame</code> or <code>-f</code> option. This opens a window which accepts mouse input, and you can hit <code>Cmd + S</code> or <code>Ctrl + S</code> at any point to save the image to your output path.</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>shadertoy-export&#xA0;-f&#xA0;--api&#xA0;--size=512,256&#xA0;-o&#xA0;images/1.png&#xA0;XslGRr</span></span></div>\n</code></pre>\n<p><img src=\"http://i.imgur.com/OkEKAfI.png\" alt=\"gui\"></p>\n<p>You can also specify a <code>--scale</code> or <code>-S</code> option to reduce the <em>interactive</em> resolution (does not affect output). For example, <code>--scale=0.5</code> will draw the scene at half resolution.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/mattdesl/shadertoy-export/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}