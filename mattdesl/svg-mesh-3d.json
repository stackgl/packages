{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mattdesl/svg-mesh-3d\">svg-mesh-3d</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n  <center><iframe scrolling=\"no\" seamless=\"seamless\" src=\"http://mattdesl.github.io/svg-mesh-3d/\"></iframe></center>\n\n<p><a href=\"http://mattdesl.github.io/svg-mesh-3d/\">(ThreeJS demo)</a> - <a href=\"http://github.com/mattdesl/svg-mesh-3d/blob/master/./demo/index.js\">(source)</a></p>\n<p>A high-level module to convert a SVG <code>&lt;path&gt;</code> string into a 3D triangulated mesh. Best suited for silhouettes, like font icon SVGs.</p>\n<p>Built on top of <a href=\"https://www.npmjs.com/package/cdt2d\">cdt2d</a> by <a href=\"https://twitter.com/MikolaLysenko\">@mikolalysenko</a>, and various other modules.</p>\n<h2 id=\"install\">Install</h2>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install&#xA0;svg-mesh-3d&#xA0;--save</span></span></div>\n</code></pre>\n<h2 id=\"example\">Example</h2>\n<p>Here is an example using a simple path:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;svgMesh3d&#xA0;=&#xA0;require(&apos;svg-mesh-3d&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;path&#xA0;=&#xA0;&apos;M305.214,374.779c2.463,0,3.45,0.493...&apos;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;mesh&#xA0;=&#xA0;svgMesh3d(path)</span></span></div>\n</code></pre>\n<p>The returned mesh is a 3D indexed <a href=\"https://www.npmjs.com/package/mesh-primitives#generic-mesh-modules\">&quot;simplicial complex&quot;</a> that can be used in ThreeJS, StackGL, etc. It uses arrays for vectors and follows the format:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;positions:&#xA0;[&#xA0;[x1,&#xA0;y1,&#xA0;z1],&#xA0;[x2,&#xA0;y2,&#xA0;z2],&#xA0;...&#xA0;],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;cells:&#xA0;[&#xA0;[a,&#xA0;b,&#xA0;c],&#xA0;[d,&#xA0;e,&#xA0;f]&#xA0;]</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<p>Or, to load a mesh in the browser from an SVG file:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;loadSvg&#xA0;=&#xA0;require(&apos;load-svg&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;parsePath&#xA0;=&#xA0;require(&apos;extract-svg-path&apos;).parse</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;svgMesh3d&#xA0;=&#xA0;require(&apos;svg-mesh-3d&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>loadSvg(&apos;svg/logo.svg&apos;,&#xA0;function&#xA0;(err,&#xA0;svg)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;if&#xA0;(err)&#xA0;throw&#xA0;err</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;svgPath&#xA0;=&#xA0;parsePath(svg)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;mesh&#xA0;=&#xA0;svgMesh3d(svgPath,&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;delaunay:&#xA0;false,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;scale:&#xA0;4</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;})</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div>\n</code></pre>\n<h2 id=\"demos\">Demos</h2>\n<ul>\n<li><a href=\"http://mattdesl.github.io/svg-mesh-3d/\">ThreeJS Demo</a></li>\n</ul>\n<p>Source:</p>\n<ul>\n<li><a href=\"http://github.com/mattdesl/svg-mesh-3d/blob/master/demo/index.js\">demo/index.js</a> - animated meshes in ThreeJS</li>\n<li><a href=\"http://github.com/mattdesl/svg-mesh-3d/blob/master/demo/2d.js\">demo/2d.js</a> - drawing Canvas2D</li>\n</ul>\n<p>To run the demos from source:</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>git&#xA0;clone&#xA0;https://github.com/mattdesl/svg-mesh-3d.git</span></span></div><div class=\"line\"><span class=\"source shell\"><span>cd&#xA0;svg-mesh-3d</span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source shell\"><span>#&#xA0;install&#xA0;dependencies</span></span></div><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install</span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source shell\"><span>#&#xA0;ThreeJS&#xA0;demo</span></span></div><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;run&#xA0;start</span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source shell\"><span>#&#xA0;Canvas2D&#xA0;demo</span></span></div><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;run&#xA0;2d</span></span></div>\n</code></pre>\n<h2 id=\"usage\">Usage</h2>\n<h4 id=\"mesh-svgmesh3d-svgpath-opt-\"><code>mesh = svgMesh3d(svgPath, [opt])</code></h4>\n<p>Triangulates the <code>svgPath</code> string into a 3D simplicial complex. The positions in the 3D mesh are normalized to a <code>-1.0 ... 1.0</code> range.</p>\n<p>Options:</p>\n<ul>\n<li><code>delaunay</code> (default <code>true</code>)<ul>\n<li>whether to use Delaunay triangulation</li>\n<li>Delaunay triangulation is slower, but looks better</li>\n</ul>\n</li>\n<li><code>clean</code> (default <code>true</code>)<ul>\n<li>whether to run the mesh through <a href=\"https://www.npmjs.com/package/clean-pslg\">clean-pslg</a></li>\n<li>slower, but often needed for correct triangulation</li>\n</ul>\n</li>\n<li><code>simplify</code> (default <code>0</code>)<ul>\n<li>a number, the distance threshold for simplication before triangulation (in pixel space)</li>\n<li>higher number can produce faster triangulation</li>\n</ul>\n</li>\n<li><code>scale</code> (default <code>1</code>)<ul>\n<li>a positive number, the scale at which to <a href=\"https://github.com/mattdesl/adaptive-bezier-curve\">approximate the curves</a> from the SVG paths</li>\n<li>higher number leads to smoother corners, but slower triangulation</li>\n</ul>\n</li>\n<li><code>normalize</code> (default <code>true</code>) a boolean, whether to normalize the positions to <code>-1 .. 1</code></li>\n<li><code>randomization</code> (default <code>0</code>)<ul>\n<li>a positive number, the amount of extra points to randomly add within the bounding box before triangulation</li>\n<li>higher number can lead to a nicer aesthetic, but slower triangulation</li>\n</ul>\n</li>\n</ul>\n<p>Other options are passed to <a href=\"https://www.npmjs.com/package/cdt2d\">cdt2d</a>, such as <code>exterior</code> (default false) and <code>interior</code> (default true).</p>\n<h2 id=\"see-also\">See Also</h2>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/extract-svg-path\">extract-svg-path</a> - grab <code>&lt;path&gt;</code> data from SVG</li>\n<li><a href=\"https://www.npmjs.com/package/load-svg\">load-svg</a> - load SVG in browser</li>\n<li><a href=\"https://www.npmjs.com/package/three-simplicial-complex\">three-simplicial-complex</a> - render meshes in ThreeJS</li>\n<li><a href=\"https://www.npmjs.com/package/cdt2d\">cdt2d</a> - constrained delaunay triangulation in 2D</li>\n</ul>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/mattdesl/svg-mesh-3d/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}