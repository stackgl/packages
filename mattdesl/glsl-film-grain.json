{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mattdesl/glsl-film-grain\">glsl-film-grain</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p><iframe scrolling=\"no\" seamless=\"seamless\" src=\"http://mattdesl.github.io/glsl-film-grain/\"></iframe></p>\n<p><a href=\"http://mattdesl.github.io/glsl-film-grain\">(click for demo)</a></p>\n<p>Natural looking film grain using 3D noise functions. Inspired by <a href=\"http://devlog-martinsh.blogspot.ca/2013/05/image-imperfections-and-film-grain-post.html\">Martins Upitis</a>. </p>\n<p>This is a fairly expensive technique to achieve film grain, but it looks more realistic than a <a href=\"https://www.npmjs.com/package/glsl-random\">hash function</a> and also produces better motion.</p>\n<p>Simplest example:</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;grain&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>glsl-film-grain</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>void</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>main</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;grainSize&#xA0;=&#xA0;</span><span class=\"constant numeric c\"><span>2.0</span></span><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;g&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>grain</span></span><span>(</span></span><span>texCoord,&#xA0;resolution&#xA0;/&#xA0;grainSize);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;color&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec3</span></span><span>(</span></span><span>g);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"support variable glsl\"><span>gl_FragColor</span></span><span>&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec4</span></span><span>(</span></span><span>color,&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div>\n</code></pre>\n<p>Results in:</p>\n<p><img src=\"http://i.imgur.com/OEBZs8B.png\" alt=\"grain\"></p>\n<p>See <a href=\"#blending-tips\">blending tips</a> and the <a href=\"http://github.com/mattdesl/glsl-film-grain/blob/master/demo.js\">demo source</a> for details.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://www.npmjs.com/package/glsl-film-grain\"></a></p>\n<h4 id=\"f-grain-texcoord-resolution-frame-q-\"><code>f = grain(texCoord, resolution[, frame[, q]])</code></h4>\n<p>Returns a float for the monochromatic grain with the given options:</p>\n<ul>\n<li><code>texCoord</code> the UV coordinates of your scene</li>\n<li><code>resolution</code> the resolution of your scene in pixels, optionally scaled to adjust the grain size</li>\n<li><code>frame</code> the animation frame, which is an offset into the Z of the 3D noise</li>\n<li><code>q</code> is a coefficient for the offset calculation, and may evoke subtly different motion. Defaults to 2.5</li>\n</ul>\n<h2 id=\"blending-tips\">blending tips</h2>\n<p>There are a lot of ways to blend the noise onto the 3D scene or image. The solution used in the demo uses <a href=\"https://www.npmjs.com/package/glsl-blend-soft-light\">glsl-blend-soft-light</a> and <a href=\"https://www.npmjs.com/package/glsl-luma\">glsl-luma</a>.</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;g&#xA0;=&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>(grain(texCoord,&#xA0;p));</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>blend&#xA0;the&#xA0;noise&#xA0;over&#xA0;the&#xA0;background,&#xA0;</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>i.e.&#xA0;overlay,&#xA0;soft&#xA0;light,&#xA0;additive</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;color&#xA0;=&#xA0;blend(backgroundColor,&#xA0;g);</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>get&#xA0;the&#xA0;luminance&#xA0;of&#xA0;the&#xA0;background</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;luminance&#xA0;=&#xA0;luma(backgroundColor);</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>reduce&#xA0;the&#xA0;noise&#xA0;based&#xA0;on&#xA0;some&#xA0;</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>threshold&#xA0;of&#xA0;the&#xA0;background&#xA0;luminance</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;response&#xA0;=&#xA0;</span><span class=\"support function glsl\"><span>smoothstep</span></span><span>(</span><span class=\"constant numeric c\"><span>0.05</span></span><span>,&#xA0;</span><span class=\"constant numeric c\"><span>0.5</span></span><span>,&#xA0;luminance);</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;&#xA0;&#xA0;&#xA0;color&#xA0;=&#xA0;</span><span class=\"support function glsl\"><span>mix</span></span><span>(color,&#xA0;backgroundColor,&#xA0;</span><span class=\"support function glsl\"><span>pow</span></span><span>(response,&#xA0;</span><span class=\"constant numeric c\"><span>2.0</span></span><span>));</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>final&#xA0;color</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"support variable glsl\"><span>gl_FragColor</span></span><span>&#xA0;=&#xA0;</span><span class=\"storage type glsl\"><span>vec4</span></span><span>(color,&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>);</span></span></div>\n</code></pre>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/mattdesl/glsl-film-grain/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}