{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mattdesl/canvas-loop\">canvas-loop</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p><iframe scrolling=\"no\" seamless=\"seamless\" src=\"http://mattdesl.github.io/canvas-loop/\"></iframe></p>\n<p><a href=\"http://mattdesl.github.io/canvas-loop/\">demo</a> - <a href=\"http://github.com/mattdesl/canvas-loop/blob/master/demo.es6\">source</a></p>\n<p>Yet another canvas shell utility, built on <a href=\"https://npmjs.org/package/canvas-fit\">canvas-fit</a> and <a href=\"https://npmjs.org/package/raf-loop\">raf-loop</a>. Useful for full-screen retina canvas demos.</p>\n<p>Example:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createGL&#xA0;=&#xA0;require(&apos;webgl-context&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createLoop&#xA0;=&#xA0;require(&apos;canvas-loop&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;get&#xA0;a&#xA0;WebGL&#xA0;context</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;gl&#xA0;=&#xA0;createGL()</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;canvas&#xA0;=&#xA0;gl.canvas</span></span></div><div class=\"line\"><span class=\"source js\"><span>document.body.appendChild(canvas)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;setup&#xA0;a&#xA0;retina-scaled&#xA0;canvas</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;app&#xA0;=&#xA0;createLoop(canvas,&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;scale:&#xA0;window.devicePixelRatio</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;start&#xA0;rendering</span></span></div><div class=\"line\"><span class=\"source js\"><span>app.start()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;on&#xA0;requestAnimationFrame</span></span></div><div class=\"line\"><span class=\"source js\"><span>app.on(&apos;tick&apos;,&#xA0;function(dt)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//&#xA0;do&#xA0;some&#xA0;rendering</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.clear(gl.COLOR_BUFFER_BIT)</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;handle&#xA0;window&#xA0;resize</span></span></div><div class=\"line\"><span class=\"source js\"><span>app.on(&apos;resize&apos;,&#xA0;function()&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//&#xA0;the&#xA0;unscaled&#xA0;size</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;width&#xA0;=&#xA0;app.shape[0]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;height&#xA0;=&#xA0;app.shape[1]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;console.log(&apos;new&#xA0;canvas&#xA0;size&apos;,&#xA0;width,&#xA0;height)</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div>\n</code></pre>\n<p>See <a href=\"http://github.com/mattdesl/canvas-loop/blob/master/demo.es6\">demo.es6</a> for a full demo.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://www.npmjs.com/package/canvas-loop\"></a></p>\n<h4 id=\"app-createloop-canvas-opt-\"><code>app = createLoop(canvas[, opt])</code></h4>\n<p>Creates a new loop with the given <code>canvas</code> (can be <a href=\"https://www.npmjs.com/package/2d-context\">2D</a> or <a href=\"https://www.npmjs.com/package/webgl-context\">WebGL</a>). </p>\n<p>The options:</p>\n<ul>\n<li><code>parent</code> element to fit to, or a scaling function (default <code>window</code>)</li>\n<li><code>scale</code> scaling ratio for canvas (default 1)</li>\n</ul>\n<p>These options are passed to <a href=\"https://github.com/hughsk/canvas-fit/\">canvas-fit</a>.</p>\n<h4 id=\"app-start-\"><code>app.start()</code></h4>\n<h4 id=\"app-stop-\"><code>app.stop()</code></h4>\n<p>Start and stop the render loop. Returns the <code>app</code> for chaining.</p>\n<h4 id=\"app-on-tick-fn-\"><code>app.on(&apos;tick&apos;, fn)</code></h4>\n<p>Listen to <code>tick</code> events, <code>fn</code> is called with <code>dt</code> parameter which is the delta time since last frame. Uses <a href=\"https://www.npmjs.com/package/raf-loop\">raf-loop</a>.</p>\n<h4 id=\"app-on-resize-fn-\"><code>app.on(&apos;resize&apos;, fn)</code></h4>\n<p>Called when the <code>window</code> has resized, after the canvas has been re-scaled according to its <code>parent</code>.</p>\n<h4 id=\"app-shape\"><code>app.shape</code></h4>\n<p>A getter for the <code>[ width, height ]</code> of the canvas <em>without</em> device scaling. This is the same as:</p>\n<pre><code>[ canvas.width / app.scale, canvas.height / app.scale ]\n</code></pre><h4 id=\"app-parent\"><code>app.parent</code></h4>\n<h4 id=\"app-scale\"><code>app.scale</code></h4>\n<p>Getters/setters to change <code>parent</code> or <code>scale</code> at runtime. See <a href=\"https://www.npmjs.com/package/canvas-fit\">canvas-fit</a> for details.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/mattdesl/canvas-loop/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}