{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mattdesl/google-panorama-equirectangular\">google-panorama-equirectangular</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p><iframe scrolling=\"no\" seamless=\"seamless\" src=\"http://mattdesl.github.io/google-panorama-equirectangular/\"></iframe></p>\n<p><a href=\"http://mattdesl.github.io/google-panorama-equirectangular/demo/\">webgl demo</a> - <a href=\"http://github.com/mattdesl/google-panorama-equirectangular/blob/master/./demo/gpu.js\">source</a></p>\n<p>Stitches Google Street View and Photo Sphere tiles into an equirectangular image. For use in the browser, with Webpack or Browserify.</p>\n<p>Also includes an <a href=\"#intermediate-mode\">intermediate mode</a> for higher quality WebGL rendering on low-end devices.</p>\n<h2 id=\"install\">Install</h2>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install&#xA0;google-panorama-equirectangular</span></span></div>\n</code></pre>\n<h2 id=\"example\">Example</h2>\n<p>For full examples, see the <a href=\"http://github.com/mattdesl/google-panorama-equirectangular/blob/master/demo/\">demo/</a> folder, or <a href=\"#running-from-source\">running from source</a> for details.</p>\n<p>Make sure to include the Google Client library first:</p>\n<pre><code class=\"lang-html\"><div class=\"line\"><span class=\"text plain null-grammar\"><span>&#xA0;&#xA0;&lt;script&#xA0;src=&quot;</span><span class=\"markup underline link https hyperlink\"><span>https://maps.googleapis.com/maps/api/js?v=3.21</span></span><span>&quot;&gt;&lt;/script&gt;</span></span></div>\n</code></pre>\n<p>Then, in JavaScript:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;load&#xA0;=&#xA0;require(&apos;google-panorama-equirectangular&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;panoID&#xA0;=&#xA0;&apos;dXZfBMex9_L7jO2JW3FTdA&apos;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>load(panoID,&#xA0;{&#xA0;zoom:&#xA0;2&#xA0;})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;.on(&apos;start&apos;,&#xA0;function&#xA0;(data)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;console.log(&apos;canvas&#xA0;size:&#xA0;&apos;,&#xA0;data.width,&#xA0;data.height)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;.on(&apos;progress&apos;,&#xA0;function&#xA0;(ev)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;console.log(&apos;progress:&#xA0;&apos;,&#xA0;ev.count&#xA0;/&#xA0;ev.total)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;.on(&apos;complete&apos;,&#xA0;function&#xA0;(image)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;document.body.appendChild(image)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;console.log(&apos;canvas&#xA0;image:&#xA0;&apos;,&#xA0;image)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;})</span></span></div>\n</code></pre>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://www.npmjs.com/package/google-panorama-equirectangular\"></a></p>\n<h4 id=\"emitter-load-id-opt-\"><code>emitter = load(id, [opt])</code></h4>\n<p>Creates a new StreetView stitcher with <code>id</code> and optional settings. <code>opt</code> can be:</p>\n<ul>\n<li><code>zoom</code> an integer between 0 and 5 (inclusive), defaults to 1</li>\n<li><code>canvas</code> a HTMLCanvasElement to re-use, defaults to creating a new element</li>\n<li><code>tiles</code> is the tile dimensions from <code>getPanoramaByLocation</code> or <code>getPanoramaById</code>, defaults to assuming StreetView image dimensions</li>\n<li><code>crossOrigin</code> crossOrigin String for image loading, defaults to <code>undefined</code></li>\n<li><code>width</code> some new StreetView IDs can be fetched by size; if the ID falls into this category, the returned image will ignore the <code>zoom</code> parameter and instead try to find something by <code>width*(width / 2)</code> dimensions</li>\n<li><code>protocol</code> the protocol to use when requesting images; defaults to undefined which will load a protocol-relative URL (<code>//foo.com/</code>) but you can specify an exact protocol if desired (which may be necessary in some environments like CocoonJS), such as <code>&apos;http&apos;</code> or <code>&apos;https&apos;</code></li>\n</ul>\n<p>Here is an example using <a href=\"https://github.com/Jam3/google-panorama-by-id\">google-panorama-by-id</a>.</p>\n<p>It&apos;s recommended you specify <code>tiles</code> for an accurate result across different image types (panorama, photo sphere, etc).</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;load&#xA0;=&#xA0;require(&apos;google-panorama-equirectangular&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;panoData&#xA0;=&#xA0;require(&apos;google-panorama-by-id&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;id&#xA0;=&#xA0;&apos;dXZfBMex9_L7jO2JW3FTdA&apos;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>panoData(id,&#xA0;function&#xA0;(err,&#xA0;result)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;tiles&#xA0;=&#xA0;result.tiles</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;load(id,&#xA0;{&#xA0;tiles:&#xA0;tiles,&#xA0;zoom:&#xA0;2,&#xA0;canvas:&#xA0;myCanvas&#xA0;})</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div>\n</code></pre>\n<h3 id=\"events\">events</h3>\n<h4 id=\"emitter-on-start-fn-\"><code>emitter.on(&apos;start&apos;, fn)</code></h4>\n<p>Called when the stitching process begins, with <code>data</code> parameter that includes the output of <a href=\"https://github.com/Jam3/google-panorama-tiles\">google-panorama-tiles</a>:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;columns:&#xA0;Number,&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;x&#xA0;tile&#xA0;count</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;rows:&#xA0;Number,&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;y&#xA0;tile&#xA0;count</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;tileWidth:&#xA0;Number,&#xA0;&#xA0;//&#xA0;tile&#xA0;size</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;tileHeight:&#xA0;Number,&#xA0;//&#xA0;tile&#xA0;size</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;width:&#xA0;Number,&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;canvas&#xA0;size</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;height:&#xA0;Number,&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;canvas&#xA0;size</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;legacy:&#xA0;Boolean&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;false&#xA0;if&#xA0;this&#xA0;is&#xA0;from&#xA0;the&#xA0;new&#xA0;API</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<h4 id=\"emitter-on-progress-fn-\"><code>emitter.on(&apos;progress&apos;, fn)</code></h4>\n<p>Called after a new tile has been loaded and drawn to the canvas.</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;count:&#xA0;Number,&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;current&#xA0;#&#xA0;of&#xA0;tiles&#xA0;loaded</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;total:&#xA0;Number,&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;total&#xA0;number&#xA0;of&#xA0;tiles</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;image:&#xA0;Image,&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;an&#xA0;image&#xA0;for&#xA0;this&#xA0;tile,&#xA0;might&#xA0;be&#xA0;null</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;position:&#xA0;[x,&#xA0;y],&#xA0;//&#xA0;the&#xA0;pixel&#xA0;position&#xA0;of&#xA0;the&#xA0;tile&#xA0;in&#xA0;the&#xA0;full&#xA0;image</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<p>In <a href=\"#intermediate-mode\">intermediate mode</a>, the <code>image</code> might be an Image or a Canvas, depending on crop.</p>\n<h4 id=\"emitter-on-not-found-fn-\"><code>emitter.on(&apos;not-found&apos;, fn)</code></h4>\n<p>Called when an image is skipped due to it not being found. The <code>url</code> is passed.</p>\n<h4 id=\"emitter-on-complete-fn-\"><code>emitter.on(&apos;complete&apos;, fn)</code></h4>\n<p>Called when the stitching is complete. The resulting <code>canvas</code> is passed as the parameter.</p>\n<p>In <a href=\"#intermediate-mode\">intermediate mode</a>, the passed <code>canvas</code> is the one used during cropping.</p>\n<h2 id=\"intermediate-mode\">Intermediate Mode</h2>\n<p>The default export stitches all tiles into a single Canvas element. This is convenient, but not ideal for low-end devices like iOS Safari. In some browsers, there is a maximum size for canvas elements, and no way to query this value. </p>\n<p>For example, in a 256MB RAM iPhone, the full canvas size must be less than <code>1024 * 1024 * 3</code> (3 MP).</p>\n<p>WebGL applications can leverage &quot;intermediate rendering&quot; mode which keeps no more than a single 512x512 canvas in memory at a time. This allows higher quality panoramas to be stitched on low-end devices. The interface is the same, and can be required like this:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;equirect&#xA0;=&#xA0;require(&apos;google-panorama-equirectangular/intermediate&apos;)</span></span></div>\n</code></pre>\n<p>Each <code>&apos;progress&apos;</code> event simply returned a cropped image for that tile. You will need to stitch and upload sub-images yourself to WebGL. See <a href=\"http://github.com/mattdesl/google-panorama-equirectangular/blob/master/demo/gpu.js\">demo/gpu.js</a> for an example.</p>\n<p>In intermediate mode, the <code>imgage</code> field of <code>&apos;progress&apos;</code> events might be a canvas or image, depending on whether a crop was necessary. The <code>originalImage</code> is provided to allow access to the HTMLImageElement, so the event data is:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;count:&#xA0;Number,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;total:&#xA0;Number,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;image:&#xA0;Canvas|Image,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;position:&#xA0;[x,&#xA0;y],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;originalImage:&#xA0;Image</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<h2 id=\"running-from-source\">Running From Source</h2>\n<p>To run the demos from source:</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>git&#xA0;clone&#xA0;https://github.com/mattdesl/google-panorama-equirectangular.git</span></span></div><div class=\"line\"><span class=\"source shell\"><span>cd&#xA0;google-panorama-equirectangular</span></span></div><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install</span></span></div>\n</code></pre>\n<p>Now run one of the demos:</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>#&#xA0;the&#xA0;simple&#xA0;WebGL&#xA0;demo</span></span></div><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;run&#xA0;webgl</span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source shell\"><span>#&#xA0;the&#xA0;simple&#xA0;2D&#xA0;DOM&#xA0;demo</span></span></div><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;run&#xA0;2d</span></span></div><div class=\"line\"><span class=\"source shell\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source shell\"><span>#&#xA0;the&#xA0;GPU&#xA0;stitching&#xA0;demo</span></span></div><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;run&#xA0;gpu</span></span></div>\n</code></pre>\n<p>And open <a href=\"http://localhost:9966/\">http://localhost:9966/</a>. Changing the source will re-load the browser page.</p>\n<h2 id=\"also-see\">Also See</h2>\n<ul>\n<li><a href=\"https://github.com/Jam3/google-panorama-zoom-level\">google-panorama-zoom-level</a></li>\n<li><a href=\"https://github.com/Jam3/google-panorama-by-id\">google-panorama-by-id</a></li>\n<li><a href=\"https://github.com/Jam3/google-panorama-by-location\">google-panorama-by-location</a></li>\n<li><a href=\"https://github.com/Jam3/google-panorama-tiles\">google-panorama-tiles</a></li>\n<li><a href=\"https://github.com/Jam3/awesome-streetview\">awesome-streetview</a></li>\n</ul>\n<h2 id=\"credits\">Credits</h2>\n<p>Thanks to @thespite&apos;s prior work on <a href=\"https://github.com/spite/PanomNom.js/\">PanomNom.js</a>, which was used as a reference while building these modules.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/mattdesl/google-panorama-equirectangular/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}