{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mattdesl/ray-plane-intersection\">ray-plane-intersection</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>Whether a 3D picking ray intersects with a plane. The plane is defined as having a <code>normal</code> [x, y, z] and <code>distance</code>. </p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;intersect&#xA0;=&#xA0;require(&apos;ray-plane-intersection&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;origin&#xA0;=&#xA0;[1,&#xA0;0,&#xA0;4]</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;dir&#xA0;=&#xA0;[0,&#xA0;0,&#xA0;-1]</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;normal&#xA0;=&#xA0;[0,&#xA0;0,&#xA0;1]</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;distance&#xA0;=&#xA0;0</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;hit&#xA0;=&#xA0;intersect(out,&#xA0;origin,&#xA0;dir,&#xA0;normal,&#xA0;distance)&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>if&#xA0;(hit)&#xA0;{&#xA0;//collision&#xA0;occurred&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;console.log(hit)&#xA0;//&#xA0;[1,&#xA0;0,&#xA0;0]</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<p>The distance can be determined with a second point on the plane, like so:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;d&#xA0;=&#xA0;-dot(normal,&#xA0;point)</span></span></div>\n</code></pre>\n<p>PRs welcome.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://www.npmjs.com/package/ray-plane-intersection\"></a></p>\n<h4 id=\"hit-intersect-out-origin-direction-normal-distance-\"><code>hit = intersect(out, origin, direction, normal, distance)</code></h4>\n<p>Test whether the ray <code>(origin, direction)</code> intersects with the plane <code>(normal, distance)</code>. </p>\n<p>If an intersection occurs, it is stored in <code>out</code> [x, y, z] and returned. Otherwise <code>null</code> is returned.</p>\n<h2 id=\"see-also\">See Also</h2>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/get-plane-normal\">get-plane-normal</a></li>\n<li><a href=\"https://www.npmjs.com/package/find-basis-3d\">find-basis-3d</a></li>\n<li><a href=\"https://www.npmjs.com/package/ray-triangle-intersection\">ray-triangle-intersection</a></li>\n</ul>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/mattdesl/ray-plane-intersection/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}