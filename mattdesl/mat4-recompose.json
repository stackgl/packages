{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mattdesl/mat4-recompose\">mat4-recompose</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>Recompose a 4x4 matrix from translation, scale, skew, perspective, and rotation. This is commonly used in matrix animations (i.e. after <a href=\"https://github.com/mattdesl/mat4-decompose\">decompose</a> and interpolation). Code ported from <a href=\"http://www.w3.org/TR/css3-transforms/#decomposing-a-3d-matrix\">W3 CSS Spec</a>. PRs for more tests/robustness/optimizations welcome. </p>\n<p>You may also be interested in <a href=\"https://www.npmjs.com/package/mat4-interpolate\">mat4-interpolate</a>, <a href=\"https://www.npmjs.com/package/mat4-decompose\">mat4-decompose</a>, and <a href=\"https://www.npmjs.com/package/css-mat4\">css-mat4</a>.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://nodei.co/npm/mat4-recompose/\"></a></p>\n<h4 id=\"recompose-matrix-translation-scale-skew-perspective-quaternion-\"><code>recompose(matrix, translation, scale, skew, perspective, quaternion)</code></h4>\n<p>Recomposes a matrix with the given vectors, storing the result into <code>matrix</code> (a 16 float array). </p>\n<ul>\n<li><code>translation</code> [x, y, z]</li>\n<li><code>scale</code> [x, y, z]</li>\n<li><code>skew</code> [xy, xz, yz] skew factors</li>\n<li><code>perspective</code> [x, y, z, w]</li>\n<li><code>quaternion</code> [x, y, z, w]</li>\n</ul>\n<p>Returns the <code>matrix</code> being recomposed.</p>\n<p>Builds a translation matrix, then applies the quaternion rotation and perspective. The matrix is then multiplied by YZ shear, then XZ shear, then XY shear (if they are non-zero). Finally multiplied by scale to get the resulting recomposed matrix.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/mattdesl/mat4-recompose/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}