{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mattdesl/gl-texture2d-pixels\">gl-texture2d-pixels</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>Gets the RGBA pixels from a <a href=\"https://www.npmjs.org/package/gl-texture2d\">gl-texture2d</a> as a Uint8Array. Same API as <a href=\"https://github.com/mattdesl/get-image-pixels\">get-image-pixels</a>.</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;getPixels&#xA0;=&#xA0;require(&apos;gl-texture2d-pixels&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;array&#xA0;=&#xA0;getPixels(texture)</span></span></div><div class=\"line\"><span class=\"source js\"><span>console.log(array.length&#xA0;===&#xA0;(texture.shape[0]&#xA0;*&#xA0;texture.shape[1]&#xA0;*&#xA0;4))&#xA0;//true</span></span></div>\n</code></pre>\n<p><strong>Note:</strong> This is a fairly expensive operation in WebGL. </p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://nodei.co/npm/gl-texture2d-pixels/\"></a></p>\n<h3 id=\"getpixels-texture-opts-\"><code>getPixels(texture[, opts])</code></h3>\n<p>Gets the RGBA pixels from <a href=\"https://www.npmjs.org/package/gl-texture2d\">gl-texture2d</a> object as a Uint8Array with some optional parameters.</p>\n<ul>\n<li><code>x</code> the x position to start clipping, default 0</li>\n<li><code>y</code> the y position to start clipping, default 0</li>\n<li><code>width</code> the width of the source to copy; this will change the returned array&apos;s shape. defaults to image width</li>\n<li><code>height</code> the height of the source to copy; this will change the returned array&apos;s shape. defaults to image height</li>\n</ul>\n<p>The texture object can actually be any generic GL wrapper, as long as it has these fields:</p>\n<pre><code>{ \n    handle, //the WebGLTexture handle\n    gl,     //the gl handle to WebGLRenderingContext\n    shape   //an array of [width, height]\n}\n</code></pre><h3 id=\"getpixels-dispose-\"><code>getPixels.dispose()</code></h3>\n<p>Release the shared canvas for GC. This is mainly useful if you need to minimize disruptive GC hitches, e.g. in a game loop. </p>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/mattdesl/gl-texture2d-pixels/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}