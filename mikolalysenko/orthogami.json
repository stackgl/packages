{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mikolalysenko/orthogami\">orthogami</a><div class=\"contrib\"></div></h1>\n<p>Turn voxel models into foldable origami!  For example, you can turn this mario model:</p>\n<p><img src=\"https://mikolalysenko.github.io/orthogami/example/mario.png\"></p>\n<p>Into this foldable model:</p>\n<p><img src=\"https://mikolalysenko.github.io/orthogami/example/mario.svg\"></p>\n<p><a href=\"https://mikolalysenko.github.io/orthogami/example/mario.pdf\">If you want to try making a Mario yourself, here is a PDF in A4 format.</a></p>\n<p>This module works in any reasonable CommonJS environment (includes node.js and browserify).  You can also use it with the <a href=\"http://voxelbuilder.com/edit.html\">voxel critter creator</a> (select &quot;Export Orthogami&quot;).</p>\n<h2 id=\"example-usage\">Example usage</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>//First&#xA0;create&#xA0;a&#xA0;voxel&#xA0;set</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;0&#xA0;=&#xA0;empty</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;voxels&#xA0;=&#xA0;require(&apos;ndarray-pack&apos;)([</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;[[0,&#xA0;1],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;[2,&#xA0;3]],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;[[0,&#xA0;0],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;[0,&#xA0;4]]</span></span></div><div class=\"line\"><span class=\"source js\"><span>])</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//Require&#xA0;the&#xA0;module&#xA0;(works&#xA0;with&#xA0;browserify)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;orthogami&#xA0;=&#xA0;require(&apos;orthogami&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//Set&#xA0;up&#xA0;options&#xA0;(can&#xA0;skip&#xA0;this&#xA0;if&#xA0;you&#xA0;like)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;options&#xA0;=&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;units:&#xA0;&apos;mm&apos;,&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//Units</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;bounds:&#xA0;[210,&#xA0;297],&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//Page&#xA0;size</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;scale:&#xA0;10,&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//Size&#xA0;of&#xA0;voxel</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;lineWidth:&#xA0;0.1&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//Size&#xA0;of&#xA0;dashed&#xA0;line</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//Then&#xA0;run&#xA0;orthogami</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;svgs&#xA0;=&#xA0;orthogami(voxels,&#xA0;options)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//Print&#xA0;out&#xA0;the&#xA0;result</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;fs&#xA0;=&#xA0;require(&apos;fs&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>svgs.forEach(function(svg,&#xA0;idx)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;fs.writeFileSync(&apos;page&apos;&#xA0;+&#xA0;idx&#xA0;+&#xA0;&apos;.svg&apos;,&#xA0;svg)</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div>\n</code></pre>\n<h3 id=\"output\">Output</h3>\n<h4 id=\"page-1-\">Page 1:</h4>\n<p><img src=\"https://mikolalysenko.github.io/orthogami/example/page0.svg\"></p>\n<h4 id=\"page-2-\">Page 2:</h4>\n<p><img src=\"https://mikolalysenko.github.io/orthogami/example/page1.svg\"></p>\n<h2 id=\"install\">Install</h2>\n<pre><code>npm install orthogami\n</code></pre><h2 id=\"api\">API</h2>\n<h3 id=\"require-orthogami-voxels-options-\"><code>require(&apos;orthogami&apos;)(voxels[, options])</code></h3>\n<p>Generates an origami template for folding a model from the given voxel object.</p>\n<ul>\n<li><code>voxels</code> is a 3D ndarray of integer values.  <code>0</code> values indicate empty voxels.</li>\n<li><p><code>options</code> is an optional object containing any of the following extra parameters:</p>\n<ul>\n<li><code>colorMap</code> a function mapping color values in the voxels to SVG color names, or alternatively an array of SVG color names.</li>\n<li><code>bounds</code> a 2D array representing the size of each page (default <code>[Infinity, Infinity]</code>)</li>\n<li><code>scale</code> a number giving the size of each voxel (default <code>64</code>)</li>\n<li><code>convexColor</code> the color of the convex creases (default <code>&apos;black&apos;</code>)</li>\n<li><code>concaveColor</code> the color of the concave creases (default <code>&apos;white&apos;</code>)</li>\n<li><code>tabColor</code> the color of the tab lines (default <code>&apos;black&apos;</code>)</li>\n<li><code>lineWidth</code> the width of the crease lines (default <code>1</code>)</li>\n<li><code>units</code> the units for the coordinate system (default <code>&apos;px&apos;</code>)</li>\n</ul>\n</li>\n</ul>\n<p><strong>Returns</strong> An array of SVG files encoding the pages of the origami printout</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2014 Mikola Lysenko. MIT License</p>\n"}