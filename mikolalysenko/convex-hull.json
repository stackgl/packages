{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/mikolalysenko/convex-hull\">convex-hull</a><div class=\"contrib\"></div></h1>\n<p>This module is a wrapper over various convex hull modules which exposes a simple interface for computing convex hulls of point sets in any dimension.</p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;ch&#xA0;=&#xA0;require(&apos;convex-hull&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;points&#xA0;=&#xA0;[</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;[0,0],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;[1,0],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;[0,1],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;[0.15,0.15],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;[0.5,&#xA0;0.5]</span></span></div><div class=\"line\"><span class=\"source js\"><span>]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//Picture:</span></span></div><div class=\"line\"><span class=\"source js\"><span>//</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;[0,1]&#xA0;*</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;&#xA0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;&#xA0;&#xA0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;&#xA0;&#xA0;&#xA0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;[0.5,0.5]</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;&#xA0;&#xA0;&#xA0;*&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;|&#xA0;[0.15,0.15]&#xA0;&#xA0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;[0,0]&#xA0;*---------------*&#xA0;[1,0]</span></span></div><div class=\"line\"><span class=\"source js\"><span>//</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>console.log(ch(points))</span></span></div>\n</code></pre>\n<p>Output:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>[[0,&#xA0;1],&#xA0;[1,&#xA0;2],&#xA0;[2,&#xA0;0]]</span></span></div>\n</code></pre>\n<h2 id=\"install\">Install</h2>\n<pre><code>npm install convex-hull\n</code></pre><p>If you want to use it in a webpage, use <a href=\"http://browserify.org\">browserify</a>.</p>\n<h2 id=\"api\">API</h2>\n<h4 id=\"require-convex-hull-points-\"><code>require(&apos;convex-hull&apos;)(points)</code></h4>\n<p>Computes the convex hull of <code>points</code></p>\n<ul>\n<li><code>points</code> is an array of points encoded as <code>d</code> length arrays</li>\n</ul>\n<p><strong>Returns</strong> A polytope encoding the convex hull of the point set.</p>\n<p><strong>Time complexity</strong> The procedure takes O(n^floor(d/2) + n log(n)) time.</p>\n<p><strong>Note</strong> This module is a wrapper over incremental-convex-hull and monotone-convex-hull for convenience.  It will select an optimal algorithm for whichever dimension is appropriate.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2014 Mikola Lysenko. MIT License</p>\n"}