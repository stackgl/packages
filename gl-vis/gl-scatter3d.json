{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/gl-vis/gl-scatter3d\">gl-scatter3d</a><div class=\"contrib\"></div></h1>\n<p>3D WebGL scatter plots with custom point glyphs.</p>\n<p><img src=\"https://raw.githubusercontent.com/gl-vis/gl-scatter3d/master/scatterplot.png\"></p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createScene&#xA0;=&#xA0;require(&apos;gl-plot3d&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createPoints&#xA0;=&#xA0;require(&apos;gl-scatter3d&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;scene&#xA0;=&#xA0;createScene()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;initialData&#xA0;=&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl:&#xA0;scene.gl,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;position:&#xA0;[&#xA0;[1,&#xA0;0,&#xA0;-1],&#xA0;[0,&#xA0;1,&#xA0;-1],&#xA0;[0,&#xA0;0,&#xA0;1],&#xA0;[1,1,-1],&#xA0;[1,0,1],&#xA0;[0,1,1]&#xA0;],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;glyph:&#xA0;[&#xA0;&#xA0;&quot;&#x25BC;&quot;,&#xA0;&quot;&#x2605;&quot;,&#xA0;&quot;&#x25A0;&quot;,&#xA0;&quot;&#x25C6;&quot;,&#xA0;&quot;&#x271A;&quot;,&#xA0;&quot;&#x2716;&quot;&#xA0;],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;color:&#xA0;[&#xA0;[0,1,0],&#xA0;[0,0,1],&#xA0;[1,1,0],&#xA0;[1,0,1],&#xA0;[0,1,1],&#xA0;[0,0,0]&#xA0;],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;size:&#xA0;12,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;orthographic:&#xA0;true</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>for(var&#xA0;i=0;&#xA0;i&lt;100;&#xA0;++i)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;theta&#xA0;=&#xA0;i&#xA0;/&#xA0;100.0&#xA0;*&#xA0;2.0&#xA0;*&#xA0;Math.PI</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;x&#xA0;=&#xA0;Math.cos(theta)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;y&#xA0;=&#xA0;Math.sin(theta)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;initialData.position.push([&#xA0;x,&#xA0;y,&#xA0;0&#xA0;])</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;initialData.glyph.push(&quot;&#x25CF;&quot;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;initialData.color.push([1,&#xA0;0,&#xA0;0])</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;points&#xA0;=&#xA0;createPoints(initialData)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>scene.add(points)</span></span></div>\n</code></pre>\n<h2 id=\"install\">Install</h2>\n<pre><code>npm install gl-scatter3d\n</code></pre><h2 id=\"basic-interface\">Basic interface</h2>\n<h2 id=\"constructor\">Constructor</h2>\n<h4 id=\"var-points-require-gl-scatter3d-options-\"><code>var points = require(&apos;gl-scatter3d&apos;)(options)</code></h4>\n<p>Constructs a scatter plot with the given parameters.  <code>options</code> is an object with the following properties:</p>\n<ul>\n<li><code>gl</code> is a WebGL context</li>\n<li><code>position</code> (Required) an array of length 3 arrays encoding the position of the points in the scatter plot.</li>\n<li><code>color</code> A length 3 array encoding the color of the points in the scatter plot.  To set colors per point, pass an array instead.  Default is <code>[0,0,0]</code></li>\n<li><code>glyph</code> The glyph of each point.  This is a UTF8 string representing some shape.  Per point glyphs can be specified by passing an array.  The default glyph is a circle, <code>&quot;&#x25CF;&quot;</code>.  For more glyph ideas, check out the <a href=\"http://unicode-table.com/en/\">unicode character set</a>.  Some other fun suggestions: <code>&quot;&#x2622;&quot;, &quot;&#x262F;&quot;, &quot;&#x2764;&quot;, &quot;&#x25B2;&quot;, &quot;&#x2691;&quot;</code>. </li>\n<li><code>size</code> The size of each point, or specified per-point using an array.  In orthographic, this is in screen coordinates, or in perspective this is in world coordinates. Default is <code>0.1</code></li>\n<li><code>orthographic</code> A flag, which if set to <code>true</code> causes the points to be drawn without perspective scaling.</li>\n<li><code>lineWidth</code> the width of the outline (set to 0 for no outline) Default is <code>0</code></li>\n<li><code>lineColor</code> the color of the outline for each marker</li>\n<li><code>font</code> the font used for drawing the glyphs (default <code>normal</code>)</li>\n<li><code>angle</code> an angle to rotate the glyphs by in radians (default <code>0</code>)</li>\n<li><code>alignment</code> a 2d vector to offset text drawing by (default <code>[0,0]</code>)</li>\n<li><code>project</code> a flag (or array of flags) which determines which axes to project onto</li>\n<li><code>projectOpacity</code> the opacity of the projected point sprites (default <code>1.0</code>)</li>\n<li><code>projectScale</code> the scaling factor of the projected point sprites (default <code>2.0/3.0</code>)</li>\n</ul>\n<p><strong>Returns</strong> A new scatter plot object</p>\n<h2 id=\"update\">Update</h2>\n<h4 id=\"points-update-options-\"><code>points.update(options)</code></h4>\n<p>Updates the scatter plot object.  The parameter <code>options</code> has the same properties as the constructor.</p>\n<h3 id=\"properties\">Properties</h3>\n<h4 id=\"points-opacity\"><code>points.opacity</code></h4>\n<p>The opacity of the point set (default 1)</p>\n<h4 id=\"points-projectscale\"><code>points.projectScale</code></h4>\n<p>A factor by which projections are rescaled</p>\n<h4 id=\"points-projectopacity\"><code>points.projectOpacity</code></h4>\n<p>The opacity of the projected points</p>\n<h4 id=\"points-axesproject\"><code>points.axesProject</code></h4>\n<p>An array of projection values for each point</p>\n<h4 id=\"points-linewidth\"><code>points.lineWidth</code></h4>\n<p>The width of the outline of each point</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2014-2015 Mikola Lysenko. MIT License.  Supported by <a href=\"https://plot.ly/\">plot.ly</a></p>\n"}