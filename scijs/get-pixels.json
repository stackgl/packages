{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/get-pixels\">get-pixels</a><div class=\"contrib\"></div></h1>\n<p>Given a URL/path, grab all the pixels in an image and return the result as an <a href=\"https://github.com/mikolalysenko/ndarray\">ndarray</a>.  Written in 100% JavaScript, works both in browserify and in node.js and has no external native dependencies.</p>\n<p>Currently the following file formats are supported:</p>\n<ul>\n<li><code>PNG</code></li>\n<li><code>JPEG</code></li>\n<li><code>GIF</code></li>\n</ul>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;getPixels&#xA0;=&#xA0;require(&quot;get-pixels&quot;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>getPixels(&quot;lena.png&quot;,&#xA0;function(err,&#xA0;pixels)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;if(err)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;console.log(&quot;Bad&#xA0;image&#xA0;path&quot;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;return</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;}</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;console.log(&quot;got&#xA0;pixels&quot;,&#xA0;pixels.shape.slice())</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div>\n</code></pre>\n<h2 id=\"install\">Install</h2>\n<pre><code>npm install get-pixels\n</code></pre><h3 id=\"require-get-pixels-url-type-cb-err-pixels-\"><code>require(&quot;get-pixels&quot;)(url[, type], cb(err, pixels))</code></h3>\n<p>Reads all the pixels from url into an ndarray.</p>\n<ul>\n<li><code>url</code> is the path to the file.  It can be a relative path, an http url, a data url, or an <a href=\"http://nodejs.org/api/buffer.html\">in-memory Buffer</a>.</li>\n<li><code>type</code> is an optional mime type for the image (required when using a Buffer)</li>\n<li><code>cb(err, pixels)</code> is a callback which gets triggered once the image is loaded.</li>\n</ul>\n<p><strong>Returns</strong> An ndarray of pixels in raster order having shape equal to <code>[width, height, channels]</code>.</p>\n<p><strong>Note</strong> For animated GIFs, a 4D array is returned with shape <code>[numFrames, width, height, 4]</code>, where each frame is a slice of the final array.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2013-2014 Mikola Lysenko. MIT License</p>\n"}