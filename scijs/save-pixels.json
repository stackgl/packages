{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/save-pixels\">save-pixels</a><div class=\"contrib\"></div></h1>\n<p>Saves an ndarray to an image.</p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;zeros&#xA0;=&#xA0;require(&quot;zeros&quot;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;savePixels&#xA0;=&#xA0;require(&quot;save-pixels&quot;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//Create&#xA0;an&#xA0;image</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;x&#xA0;=&#xA0;zeros([32,&#xA0;32])</span></span></div><div class=\"line\"><span class=\"source js\"><span>x.set(16,&#xA0;16,&#xA0;255)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//Save&#xA0;to&#xA0;a&#xA0;file</span></span></div><div class=\"line\"><span class=\"source js\"><span>savePixels(x,&#xA0;&quot;png&quot;).pipe(process.stdout)</span></span></div>\n</code></pre>\n<p>This writes the following image to stdout:</p>\n<p>&lt;img src=<a href=\"https://raw.github.com/mikolalysenko/save-pixels/master/example/example.png&gt;\">https://raw.github.com/mikolalysenko/save-pixels/master/example/example.png&gt;</a></p>\n<h2 id=\"install\">Install</h2>\n<pre><code>npm install save-pixels\n</code></pre><h3 id=\"require-save-pixels-array-type-options-\"><code>require(&quot;save-pixels&quot;)(array, type[, options])</code></h3>\n<p>Saves an ndarray as an image with the given format</p>\n<ul>\n<li><code>array</code> is an <code>ndarray</code> of pixels.  Assumes that shape is <code>[width, height, channels]</code></li>\n<li><p><code>type</code> is the type of the image to save.  Currently supported formats:</p>\n<ul>\n<li><code>&quot;jpeg&quot;</code>, <code>&quot;jpg&quot;</code> - Joint Photographic Experts Group format</li>\n<li><code>&quot;gif&quot;</code> - Graphics Interchange Format</li>\n<li><code>&quot;png&quot;</code> - Portable Network Graphics format</li>\n<li><code>&quot;canvas&quot;</code> - A canvas element</li>\n</ul>\n</li>\n<li><p><code>options</code> is an object that alters saving behavior</p>\n<ul>\n<li><p><code>quality</code> is the <code>Number</code> to use for saved image quality</p>\n<ul>\n<li>This can only be used with a <code>&quot;jpeg&quot;</code> image</li>\n<li>It range between 1 (low quality) and 100 (high quality) inclusively</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Returns</strong> A stream that you can pipe to serialize the result, or a canvas element if the <code>type</code> is <code>&quot;canvas&quot;</code>.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2013 Mikola Lysenko. MIT License</p>\n"}