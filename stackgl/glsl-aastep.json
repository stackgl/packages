{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/glsl-aastep\">glsl-aastep</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p><img src=\"http://i.imgur.com/w7El33x.png\" alt=\"smooth\"></p>\n<p><a href=\"http://glslb.in/s/d7b309df\">(glslbin demo)</a></p>\n<p>Performs a smoothstep using standard derivatives for anti-aliased edges at any level of magnification. If <code>GL_OES_standard_derivatives</code> is not available, this falls back to using <code>step()</code> without any anti-aliasing. </p>\n<p>For this module to work, you must enable standard derivatives at your top-level shader:</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>precision&#xA0;mediump&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta preprocessor c\"><span>#</span><span class=\"keyword control import c\"><span>ifdef</span></span><span>&#xA0;GL_OES_standard_derivatives</span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#extension&#xA0;GL_OES_standard_derivatives&#xA0;:&#xA0;enable</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta preprocessor c\"><span>#</span><span class=\"keyword control import c\"><span>endif</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;aastep&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>&apos;glsl-aastep&apos;</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>rest&#xA0;of&#xA0;your&#xA0;shader</span><span>&#xA0;</span></span></span></div>\n</code></pre>\n<p>A full example of 2D circle rendering:</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>precision&#xA0;highp&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta preprocessor c\"><span>#</span><span class=\"keyword control import c\"><span>ifdef</span></span><span>&#xA0;GL_OES_standard_derivatives</span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#extension&#xA0;GL_OES_standard_derivatives&#xA0;:&#xA0;enable</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta preprocessor c\"><span>#</span><span class=\"keyword control import c\"><span>endif</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;aastep&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>&apos;glsl-aastep&apos;</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;iGlobalTime;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;&#xA0;iResolution;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>void</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>main</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>centered&#xA0;texture&#xA0;coordinates</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec2</span></span><span>&#xA0;uv&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec2</span></span><span>(</span></span><span class=\"support variable glsl\"><span>gl_FragCoord</span></span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>xy</span></span><span>&#xA0;/&#xA0;iResolution</span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>xy</span></span><span>)&#xA0;-&#xA0;</span><span class=\"constant numeric c\"><span>0.5</span></span><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>correct&#xA0;aspect</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;uv</span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>x</span></span><span>&#xA0;*=&#xA0;iResolution</span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>x</span></span><span>&#xA0;/&#xA0;iResolution</span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>y</span></span><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>animate&#xA0;zoom</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;uv&#xA0;/=</span><span class=\"punctuation whitespace support function leading c\"><span>&#xA0;</span></span><span class=\"support function C99 c\"><span>sin</span></span><span>(iGlobalTime&#xA0;*&#xA0;</span><span class=\"constant numeric c\"><span>0.2</span></span><span>);&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>radial&#xA0;distance</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;len&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>length</span></span><span>(</span></span><span>uv);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>anti-alias</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;len&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>aastep</span></span><span>(</span></span><span class=\"constant numeric c\"><span>0.5</span></span><span>,&#xA0;len);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"support variable glsl\"><span>gl_FragColor</span></span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>rgb</span></span><span>&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec3</span></span><span>(</span></span><span>len);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"support variable glsl\"><span>gl_FragColor</span></span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>a</span></span><span>&#xA0;&#xA0;&#xA0;=&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div>\n</code></pre>\n<p>Suggestions/PRs welcome.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://www.npmjs.com/package/glsl-aastep\"></a></p>\n<h4 id=\"float-aastep-float-threshold-float-value-\"><code>float aastep(float threshold, float value)</code></h4>\n<p>Performs a <code>step(threshold, value)</code> function, except that the edge is smoothed across the width of a single fragment to create anti-aliasing at any scale. Returns the smoothed float.</p>\n<h2 id=\"contributing\">Contributing</h2>\n<p>See <a href=\"https://github.com/stackgl/contributing\">stackgl/contributing</a> for details.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/stackgl/glsl-aastep/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}