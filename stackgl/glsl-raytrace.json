{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/glsl-raytrace\">glsl-raytrace</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>Given a signed distance function and ray, trace a scene to find the first point\nof intersection.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://nodei.co/npm/glsl-raytrace/\"></a></p>\n<h3 id=\"raytrace-require-glsl-raytrace-map-steps-\"><code>raytrace = require(glsl-raytrace, &lt;map&gt;, &lt;steps&gt;)</code></h3>\n<p>Loads the raytrace function into your shader. Note that <code>map</code>\nand <code>steps</code> are required to be defined when using this module.</p>\n<h4 id=\"vec2-map-vec3-position-\"><code>vec2 map(vec3 position)</code></h4>\n<p>Your signed distance function, responsible for defining the\nsolid shapes in your scene. Accepts <code>position</code>, and returns\na <code>vec2</code>, representing:</p>\n<ul>\n<li>The signed distance from the surface, i.e. how far from the\nsurface that position is. If inside the surface, this\nnumber should be negative. If a collision isn&apos;t made, this\nnumber should be <code>-1.0</code>. Fortunately there&apos;s a bunch of\neasily composable primitives so this isn&apos;t as scary as it\nsounds once you&apos;re familiar with it.</li>\n<li>A second attribute for assigning a property to the surface.\nOften, this is used as a material ID to apply different\neffects to different surfaces, but it could really be\nanything.</li>\n</ul>\n<h4 id=\"int-steps\"><code>int steps</code></h4>\n<p>The maximum number of steps to attempt for each trace.</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>vec2</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>doModel</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;p</span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>;</span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;raytrace&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>&apos;glsl-raytrace&apos;,&#xA0;map&#xA0;=&#xA0;doModel,&#xA0;steps&#xA0;=&#xA0;90</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>vec2</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>doModel</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;position</span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;radius&#xA0;&#xA0;=&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;dist&#xA0;&#xA0;&#xA0;&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>length</span></span><span>(</span></span><span>position)&#xA0;-&#xA0;radius;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;objType&#xA0;=&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"keyword control glsl\"><span>return</span></span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec2</span></span><span>(</span></span><span>dist,&#xA0;objType);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div>\n</code></pre>\n<h3 id=\"vec2-raytrace-vec3-ro-vec3-rd-\"><code>vec2 raytrace(vec3 ro, vec3 rd)</code></h3>\n<p>Once set up, you can then use the <code>raytrace</code> function to\ntrace a ray and get how far it travels before making a\ncollision. You can then use this value to determine the point\nof the collision, the surface normal and lighting conditions,\netc.</p>\n<ul>\n<li><code>ro</code> is the ray origin.</li>\n<li><code>rd</code> is a <em>unit vector</em> (i.e. normalized) representing the\nray direction.</li>\n</ul>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;square&#xA0;&#xA0;&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>&apos;glsl-square-frame&apos;</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;camera&#xA0;&#xA0;&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>&apos;glsl-camera-ray&apos;</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;raytrace&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>&apos;glsl-raytrace&apos;</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>vec2</span></span><span>&#xA0;&#xA0;iResolution;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;iGlobalTime;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>void</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>main</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>&#xA0;Bootstrap&#xA0;a&#xA0;Shadertoy-style&#xA0;raytracing&#xA0;scene:</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;cameraAngle&#xA0;&#xA0;=&#xA0;</span><span class=\"constant numeric c\"><span>0.8</span></span><span>&#xA0;*&#xA0;iGlobalTime;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;&#xA0;rayOrigin&#xA0;&#xA0;&#xA0;&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec3</span></span><span>(</span></span><span class=\"constant numeric c\"><span>3.5</span></span><span>&#xA0;*</span><span class=\"punctuation whitespace support function leading c\"><span>&#xA0;</span></span><span class=\"support function C99 c\"><span>sin</span></span><span>(cameraAngle),&#xA0;</span><span class=\"constant numeric c\"><span>3.0</span></span><span>,&#xA0;</span><span class=\"constant numeric c\"><span>3.5</span></span><span>&#xA0;*</span><span class=\"punctuation whitespace support function leading c\"><span>&#xA0;</span></span><span class=\"support function C99 c\"><span>cos</span></span><span>(cameraAngle));</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;&#xA0;rayTarget&#xA0;&#xA0;&#xA0;&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec3</span></span><span>(</span></span><span class=\"constant numeric c\"><span>0</span></span><span>,&#xA0;</span><span class=\"constant numeric c\"><span>0</span></span><span>,&#xA0;</span><span class=\"constant numeric c\"><span>0</span></span><span>);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec2</span></span><span>&#xA0;&#xA0;screenPos&#xA0;&#xA0;&#xA0;&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>square</span></span><span>(</span></span><span>iResolution</span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>xy</span></span><span>);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;lensLength&#xA0;&#xA0;&#xA0;=&#xA0;</span><span class=\"constant numeric c\"><span>2.0</span></span><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;&#xA0;rayDirection&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>camera</span></span><span>(</span></span><span>rayOrigin,&#xA0;rayTarget,&#xA0;screenPos,&#xA0;lensLength);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec2</span></span><span>&#xA0;collision&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>raytrace</span></span><span>(</span></span><span>rayOrigin,&#xA0;rayDirection);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>&#xA0;If&#xA0;the&#xA0;ray&#xA0;collides,&#xA0;draw&#xA0;the&#xA0;surface</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"keyword control glsl\"><span>if</span></span><span class=\"meta initialization c\"><span>&#xA0;</span><span class=\"punctuation definition parameters c\"><span>(</span></span></span><span>collision</span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>x</span></span><span>&#xA0;&gt;&#xA0;-</span><span class=\"constant numeric c\"><span>0.5</span></span><span>)&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>&#xA0;Determine&#xA0;the&#xA0;point&#xA0;of&#xA0;collision</span><span>&#xA0;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;pos&#xA0;=&#xA0;rayOrigin&#xA0;+&#xA0;rayDirection&#xA0;*&#xA0;collision</span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>x</span></span><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>&#xA0;...</span><span>&#xA0;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>&#xA0;...</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div>\n</code></pre>\n<h3 id=\"raytrace-vec3-ro-vec3-rd-float-maxd-float-precis-\"><code>raytrace(vec3 ro, vec3 rd, float maxd, float precis)</code></h3>\n<p>For more control, you may optionally include:</p>\n<ul>\n<li><code>float maxd</code>: the maxium distance to trace. Defaults to 20.</li>\n<li><code>float precis</code>: the minimum closeness to the surface before\nconsidering the trace to be a collision. Defaults to 0.001.\nIncreasing this number will improve performance.</li>\n</ul>\n<h2 id=\"contributing\">Contributing</h2>\n<p>See <a href=\"https://github.com/stackgl/contributing\">stackgl/contributing</a> for details.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT. See <a href=\"http://github.com/stackgl/glsl-raytrace/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}