{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/glsl-gamma\">glsl-gamma</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>Convenience utilities for working in linear space when dealing with sRGB textures.</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;toLinear&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>&apos;glsl-gamma/in&apos;</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;toGamma&#xA0;&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>&apos;glsl-gamma/out&apos;</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>void</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>main</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>sample&#xA0;into&#xA0;linear&#xA0;space</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec4</span></span><span>&#xA0;color&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>toLinear</span></span><span>(</span><span class=\"support function any-method c\"><span>texture2D</span></span><span>(</span></span><span>uTexture,&#xA0;vUv));</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>do&#xA0;linear&#xA0;space&#xA0;transforms&#xA0;on&#xA0;RGB...</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>output&#xA0;to&#xA0;sRGB&#xA0;color&#xA0;buffer</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"support variable glsl\"><span>gl_FragColor</span></span><span>&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>toGamma</span></span><span>(</span></span><span>color);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div>\n</code></pre>\n<p>Currently all gamma operates on a <code>2.2</code> constant.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://nodei.co/npm/glsl-gamma/\"></a></p>\n<h4 id=\"tolinear-require-glsl-gamma-in-\"><code>toLinear = require(&apos;glsl-gamma/in&apos;)</code></h4>\n<h5 id=\"gentype-tolinear-gentype-color-\"><code>genType = toLinear(genType color)</code></h5>\n<p>Take a sRGB value and return its linear form. For <code>vec4</code>, the alpha component is left unchanged.</p>\n<p>This is also the default export of <code>glsl-gamma</code>.</p>\n<h4 id=\"togamma-require-glsl-gamma-out-\"><code>toGamma = require(&apos;glsl-gamma/out&apos;)</code></h4>\n<h5 id=\"gentype-togamma-gentype-color-\"><code>genType = toGamma(genType color)</code></h5>\n<p>Takes a linear value and return its gamma-corrected (sRGB) form. For <code>vec4</code>, the alpha component is left unchanged.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT. See <a href=\"http://github.com/stackgl/glsl-gamma/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}