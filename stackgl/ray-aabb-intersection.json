{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/ray-aabb-intersection\">ray-aabb-intersection</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>Determine the point of intersection between a ray and axis-aligned bounding box (AABB). Theoretically works in an arbitrary number of dimensions!</p>\n<p>Many thanks to <a href=\"http://github.com/BSVino\"><strong>@BSVino</strong></a> for providing the <a href=\"https://github.com/BSVino/MathForGameDevelopers/blob/line-box-intersection/math/collision.cpp\">original C++ implementation</a> and <a href=\"https://www.youtube.com/watch?v=USjbg5QXk3g\">accompanying</a> <a href=\"https://www.youtube.com/watch?v=3vONlLYtHUE\">videos</a>.</p>\n<p><a href=\"http://stack.gl/ray-aabb-intersection/\"><strong>view demo</strong></a></p>\n<iframe scrolling=\"no\" seamless=\"seamless\" src=\"http://stack.gl/ray-aabb-intersection/\"></iframe><h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://www.npmjs.com/package/ray-aabb-intersection\"></a></p>\n<h3 id=\"out-intersection-out-origin-dir-aabb-\"><code>out = intersection(out, origin, dir, aabb)</code></h3>\n<p>Determines if the given ray <code>(origin, direction)</code> intersects with the <code>aabb</code>.</p>\n<p>If no intersection occurs, returns <code>null</code>. Otherwise, the intersection point is stored in <code>out</code> and then returned.</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>const&#xA0;origin&#xA0;=&#xA0;new&#xA0;Float32Array([0,&#xA0;4,&#xA0;0])</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;dir&#xA0;=&#xA0;new&#xA0;Float32Array([0,&#xA0;1,&#xA0;0])</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;out&#xA0;=&#xA0;new&#xA0;Float32Array(3)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;aabb&#xA0;=&#xA0;[</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;[-1,&#xA0;-1,&#xA0;-1],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;[+1,&#xA0;+1,&#xA0;+1]</span></span></div><div class=\"line\"><span class=\"source js\"><span>]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>intersection(out,&#xA0;origin,&#xA0;dir,&#xA0;aabb)</span></span></div>\n</code></pre>\n<h3 id=\"d-intersection-distance-origin-dir-aabb-\"><code>d = intersection.distance(origin, dir, aabb)</code></h3>\n<p>Returns the distance from the given ray <code>(origin, direction)</code> to the supplied <code>aabb</code>. If no intersection occurs, returns <code>Infinity</code>.</p>\n<p>Note that the <code>direction</code> vector should be normalized.</p>\n<h2 id=\"see-also\">See Also</h2>\n<ul>\n<li><a href=\"http://github.com/tmpvar/ray-aabb\">ray-aabb</a></li>\n<li><a href=\"http://github.com/mattdesl/ray-sphere-intersection\">ray-sphere-intersection</a></li>\n<li><a href=\"http://github.com/mattdesl/ray-plane-intersection\">ray-plane-intersection</a></li>\n<li><a href=\"http://github.com/substack/ray-triangle-intersection\">ray-triangle-intersection</a></li>\n<li><a href=\"https://github.com/Jam3/camera-picking-ray\">camera-picking-ray</a></li>\n</ul>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/stackgl/ray-aabb-intersection/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}