{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/gl-toy\">gl-toy</a><div class=\"contrib\"></div></h1>\n<p><a href=\"https://npmjs.org/package/gl-toy\"></a>\n<a href=\"https://npmjs.org/package/gl-toy\"></a></p>\n<p>Create quick GLSL fragment shader demos.</p>\n<h2 id=\"installation\">Installation</h2>\n<pre><code class=\"lang-bash\"><div class=\"line\"><span class=\"source shell\"><span>$&#xA0;npm&#xA0;install&#xA0;gl-toy</span></span></div>\n</code></pre>\n<h2 id=\"usage\">Usage</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;glslify&#xA0;=&#xA0;require(&apos;glslify&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;toy&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;require(&apos;gl-toy&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;shader&#xA0;=&#xA0;glslify(&apos;./shader.frag&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;start&#xA0;&#xA0;=&#xA0;Date.now()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>toy(shader,&#xA0;function(gl,&#xA0;shader)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;shader.uniforms.uScreenSize&#xA0;=&#xA0;[gl.drawingBufferWidth,&#xA0;gl.drawingBufferHeight]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;shader.uniforms.uTime&#xA0;=&#xA0;Date.now()&#xA0;-&#xA0;start</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div>\n</code></pre>\n<p>With <a href=\"http://ghub.io/beefy\">beefy</a> installed:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>$&#xA0;beefy&#xA0;./index.js</span></span></div>\n</code></pre>\n<h3 id=\"toy-gltoy-frag-update-\">toy = glToy(frag, update)</h3>\n<p>Creates a new shader renderer, attaching it to <code>document.body</code> and making\nit fill the screen.</p>\n<p><code>frag</code> should be a fragment shader string you&apos;d like to render using\n<a href=\"http://ghub.io/a-big-triangle\"><code>a-big-triangle</code></a>.</p>\n<p><code>update(gl, shader)</code> is called before drawing to the screen so that you\ncan update uniforms being passed into the program. Here, <code>gl</code> is a\n<code>WebGLRenderingContext</code> and <code>shader</code> is an instance of\n<a href=\"http://ghub.io/gl-shader\"><code>gl-shader</code></a>.</p>\n<h3 id=\"toy-update-frag-\">toy.update(frag)</h3>\n<p>Updates the current fragment shader with the new <code>frag</code>\nstring.</p>\n<h3 id=\"toy-resize-\">toy.resize()</h3>\n<p>Resizes the canvas to fit within its parent element, using\n<a href=\"http://ghub.io/canvas-fit\"><code>canvas-fit</code></a>.</p>\n<h3 id=\"toy-canvas\">toy.canvas</h3>\n<p>A reference to <code>gl-toy</code>&apos;s canvas element.</p>\n<h3 id=\"toy-gl\">toy.gl</h3>\n<p>A reference to <code>gl-toy</code>&apos;s <code>WebGLRenderingContext</code>.</p>\n<h3 id=\"toy-shader\">toy.shader</h3>\n<p>A reference to <code>gl-toy</code>&apos;s instance of\n<a href=\"http://ghub.io/gl-shader\"><code>gl-shader</code></a>.</p>\n<h2 id=\"why-\">Why?</h2>\n<p>WebGL and glslify can be a bit tricky to set up. This makes it easier to get\nsomething working quickly. It might not suit all use cases, but then again:\nneither does <a href=\"https://www.shadertoy.com/\">shadertoy</a>.</p>\n<h2 id=\"contributors\">Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/yoshuawuyts\">Yoshua Wuyts</a></li>\n<li><a href=\"https://github.com/hughsk\">Hugh Kennedy</a></li>\n</ul>\n<h2 id=\"license\">License</h2>\n<p><a href=\"https://tldrlegal.com/license/mit-license\">MIT</a></p>\n"}