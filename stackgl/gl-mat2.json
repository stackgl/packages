{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/gl-mat2\">gl-mat2 </a><div class=\"contrib\"></div></h1>\n<p>Part of a fork of <a href=\"http://github.com/toji\">@toji</a>&apos;s\n<a href=\"http://github.com/toji/gl-matrix\">gl-matrix</a> split into smaller pieces: this\npackage contains <code>glMatrix.mat2</code>.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://nodei.co/npm/gl-mat2/\"></a></p>\n<h3 id=\"mat2-require-gl-mat2-\"><code>mat2 = require(&apos;gl-mat2&apos;)</code></h3>\n<p>Will load all of the module&apos;s functionality and expose it on a single\nobject. Note that any of the methods may also be required directly\nfrom their files.</p>\n<p>For example, the following are equivalent:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;scale&#xA0;=&#xA0;require(&apos;gl-mat2&apos;).scale</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;scale&#xA0;=&#xA0;require(&apos;gl-mat2/scale&apos;)</span></span></div>\n</code></pre>\n<h2 id=\"api\">API</h2>\n<ul>\n<li><a href=\"#mat2adjointoutmat2amat2\">mat2.adjoint()</a></li>\n<li><a href=\"#mat2copyoutmat2amat2\">mat2.copy()</a></li>\n<li><a href=\"#mat2create\">mat2.create()</a></li>\n<li><a href=\"#mat2determinantamat2\">mat2.determinant()</a></li>\n<li><a href=\"#mat2frobamat2\">mat2.frob()</a></li>\n<li><a href=\"#mat2identityoutmat2\">mat2.identity()</a></li>\n<li><a href=\"#mat2invertoutmat2amat2\">mat2.invert()</a></li>\n<li><a href=\"#mat2ldulmat2dmat2umat2amat2\">mat2.ldu()</a></li>\n<li><a href=\"#mat2multiplyoutmat2amat2bmat2\">mat2.multiply()</a></li>\n<li><a href=\"#mat2rotateoutmat2amat2radnumber\">mat2.rotate()</a></li>\n<li><a href=\"#mat2scaleoutmat2amat2vvec2\">mat2.scale()</a></li>\n<li><a href=\"#mat2transposeoutmat2amat2\">mat2.transpose()</a></li>\n</ul>\n<h3 id=\"mat2-adjoint-out-mat2-a-mat2-\"><code>mat2.adjoint(out:mat2, a:mat2)</code></h3>\n<p>  Calculates the adjugate of a mat2</p>\n<h3 id=\"mat2-copy-out-mat2-a-mat2-\"><code>mat2.copy(out:mat2, a:mat2)</code></h3>\n<p>  Copy the values from one mat2 to another</p>\n<h3 id=\"mat2-create-\"><code>mat2.create()</code></h3>\n<p>  Creates a new identity mat2</p>\n<h3 id=\"mat2-determinant-a-mat2-\"><code>mat2.determinant(a:mat2)</code></h3>\n<p>  Calculates the determinant of a mat2</p>\n<h3 id=\"mat2-frob-a-mat2-\"><code>mat2.frob(a:mat2)</code></h3>\n<p>  Returns Frobenius norm of a mat2</p>\n<h3 id=\"mat2-identity-out-mat2-\"><code>mat2.identity(out:mat2)</code></h3>\n<p>  Set a mat2 to the identity matrix</p>\n<h3 id=\"mat2-invert-out-mat2-a-mat2-\"><code>mat2.invert(out:mat2, a:mat2)</code></h3>\n<p>  Inverts a mat2</p>\n<h3 id=\"mat2-ldu-l-mat2-d-mat2-u-mat2-a-mat2-\"><code>mat2.ldu(L:mat2, D:mat2, U:mat2, a:mat2)</code></h3>\n<p>  Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix</p>\n<h3 id=\"mat2-multiply-out-mat2-a-mat2-b-mat2-\"><code>mat2.multiply(out:mat2, a:mat2, b:mat2)</code></h3>\n<p>  Multiplies two mat2&apos;s</p>\n<h3 id=\"mat2-rotate-out-mat2-a-mat2-rad-number-\"><code>mat2.rotate(out:mat2, a:mat2, rad:Number)</code></h3>\n<p>  Rotates a mat2 by the given angle</p>\n<h3 id=\"mat2-scale-out-mat2-a-mat2-v-vec2-\"><code>mat2.scale(out:mat2, a:mat2, v:vec2)</code></h3>\n<p>  Scales the mat2 by the dimensions in the given vec2</p>\n<h3 id=\"mat2-transpose-out-mat2-a-mat2-\"><code>mat2.transpose(out:mat2, a:mat2)</code></h3>\n<p>  Transpose the values of a mat2</p>\n<h2 id=\"license\">License</h2>\n<p><a href=\"http://en.wikipedia.org/wiki/Zlib_License\">zlib</a>. See <a href=\"https://github.com/stackgl/gl-mat2/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}