{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/gl-fbo\">gl-fbo</a><div class=\"contrib\"></div></h1>\n<p>WebGL framebuffer object wrapper</p>\n<iframe scrolling=\"no\" seamless=\"seamless\" src=\"http://stack.gl/gl-fbo/\"></iframe><h2 id=\"example\">Example</h2>\n<p><a href=\"http://stackgl.github.io/gl-fbo/\">Try this in your browser if you have WebGL</a></p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;shell&#xA0;=&#xA0;require(&quot;gl-now&quot;)()</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createFBO&#xA0;=&#xA0;require(&quot;gl-fbo&quot;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;glslify&#xA0;=&#xA0;require(&quot;glslify&quot;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;ndarray&#xA0;=&#xA0;require(&quot;ndarray&quot;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;fill&#xA0;=&#xA0;require(&quot;ndarray-fill&quot;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;fillScreen&#xA0;=&#xA0;require(&quot;a-big-triangle&quot;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createUpdateShader&#xA0;=&#xA0;glslify({</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;vertex:&#xA0;&quot;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;attribute&#xA0;vec2&#xA0;position;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;varying&#xA0;vec2&#xA0;uv;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;main()&#xA0;{\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;gl_Position&#xA0;=&#xA0;vec4(position,0.0,1.0);\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;uv&#xA0;=&#xA0;0.5&#xA0;*&#xA0;(position+1.0);\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;}&quot;,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;fragment:&#xA0;&quot;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;precision&#xA0;mediump&#xA0;float;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;uniform&#xA0;sampler2D&#xA0;buffer;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;uniform&#xA0;vec2&#xA0;dims;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;varying&#xA0;vec2&#xA0;uv;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;main()&#xA0;{\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;float&#xA0;n&#xA0;=&#xA0;0.0;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(int&#xA0;dx=-1;&#xA0;dx&lt;=1;&#xA0;++dx)\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;for(int&#xA0;dy=-1;&#xA0;dy&lt;=1;&#xA0;++dy)&#xA0;{\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;n&#xA0;+=&#xA0;texture2D(buffer,&#xA0;uv+vec2(dx,dy)/dims).r;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;float&#xA0;s&#xA0;=&#xA0;texture2D(buffer,&#xA0;uv).r;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;if(n&#xA0;&gt;&#xA0;3.0+s&#xA0;||&#xA0;n&#xA0;&lt;&#xA0;3.0)&#xA0;{\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;gl_FragColor&#xA0;=&#xA0;vec4(0,0,0,1);\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;else&#xA0;{\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;gl_FragColor&#xA0;=&#xA0;vec4(1,1,1,1);\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;}&quot;,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;inline:&#xA0;true</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createDrawShader&#xA0;=&#xA0;glslify({</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;vertex:&#xA0;&quot;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;attribute&#xA0;vec2&#xA0;position;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;varying&#xA0;vec2&#xA0;uv;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;main()&#xA0;{\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;gl_Position&#xA0;=&#xA0;vec4(position,0.0,1.0);\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;uv&#xA0;=&#xA0;0.5&#xA0;*&#xA0;(position+1.0);\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;}&quot;,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;fragment:&#xA0;&quot;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;precision&#xA0;mediump&#xA0;float;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;uniform&#xA0;sampler2D&#xA0;buffer;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;varying&#xA0;vec2&#xA0;uv;\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;main()&#xA0;{\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;gl_FragColor&#xA0;=&#xA0;texture2D(buffer,&#xA0;uv);\\</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;}&quot;,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;inline:&#xA0;true</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;state,&#xA0;updateShader,&#xA0;drawShader,&#xA0;current&#xA0;=&#xA0;0</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>shell.on(&quot;gl-init&quot;,&#xA0;function()&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;gl&#xA0;=&#xA0;shell.gl</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Turn&#xA0;off&#xA0;depth&#xA0;test</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.disable(gl.DEPTH_TEST)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Initialize&#xA0;shaders</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;updateShader&#xA0;=&#xA0;createUpdateShader(gl)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;drawShader&#xA0;=&#xA0;createDrawShader(gl)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Allocate&#xA0;buffers</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;state&#xA0;=&#xA0;[&#xA0;createFBO(gl,&#xA0;[512,&#xA0;512]),&#xA0;createFBO(gl,&#xA0;[512,&#xA0;512])&#xA0;]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Initialize&#xA0;state&#xA0;buffer</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;initial_conditions&#xA0;=&#xA0;ndarray(new&#xA0;Uint8Array(512*512*4),&#xA0;[512,&#xA0;512,&#xA0;4])</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;fill(initial_conditions,&#xA0;function(x,y,c)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;if(c&#xA0;===&#xA0;3)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;255</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;}</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;return&#xA0;Math.random()&#xA0;&gt;&#xA0;0.9&#xA0;?&#xA0;255&#xA0;:&#xA0;0</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;state[0].color[0].setPixels(initial_conditions)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Set&#xA0;up&#xA0;vertex&#xA0;pointers</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;drawShader.attributes.position.location&#xA0;=&#xA0;updateShader.attributes.position.location&#xA0;=&#xA0;0</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>shell.on(&quot;tick&quot;,&#xA0;function()&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;gl&#xA0;=&#xA0;shell.gl</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;prevState&#xA0;=&#xA0;state[current]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;curState&#xA0;=&#xA0;state[current&#xA0;^=&#xA0;1]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Switch&#xA0;to&#xA0;state&#xA0;fbo</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;curState.bind()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Run&#xA0;update&#xA0;shader</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;updateShader.bind()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;updateShader.uniforms.buffer&#xA0;=&#xA0;prevState.color[0].bind()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;updateShader.uniforms.dims&#xA0;=&#xA0;prevState.shape</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;fillScreen(gl)</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>shell.on(&quot;gl-render&quot;,&#xA0;function(t)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;gl&#xA0;=&#xA0;shell.gl</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Render&#xA0;contents&#xA0;of&#xA0;buffer&#xA0;to&#xA0;screen</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;drawShader.bind()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;drawShader.uniforms.buffer&#xA0;=&#xA0;state[current].color[0].bind()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;fillScreen(gl)</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div>\n</code></pre>\n<p>Result:</p>\n<p><img src=\"https://raw.github.com/stackgl/gl-fbo/master/screenshot.png\"></p>\n<h2 id=\"install\">Install</h2>\n<p>Install using npm:</p>\n<pre><code>npm install gl-fbo\n</code></pre><h2 id=\"api\">API</h2>\n<h3 id=\"var-createfbo-require-gl-fbo-\"><code>var createFBO = require(&quot;gl-fbo&quot;)</code></h3>\n<h2 id=\"constructor\">Constructor</h2>\n<p>There is currently only one default way to create a Framebuffer object.  You can construct a framebuffer using the following syntax:</p>\n<h3 id=\"var-fbo-createfbo-gl-shape-options-\"><code>var fbo = createFBO(gl, shape[, options])</code></h3>\n<p>Creates a wrapped framebuffer object</p>\n<ul>\n<li><code>gl</code> is a handle to a WebGL context</li>\n<li><code>shape</code> is a length 2 array encoding the <code>[width, height]</code> of the frame buffer</li>\n<li><p><code>options</code> is an object containing the following optional properties:</p>\n<ul>\n<li><code>options.preferFloat</code> Upgrade to floating point if available, otherwise fallback to 8bit. (default <code>false</code>)</li>\n<li><code>options.float</code> Use floating point textures (default <code>false</code>)</li>\n<li><code>options.color</code>  The number of color buffers to create (default <code>1</code>)</li>\n<li><code>options.depth</code> If fbo has a depth buffer (default: <code>true</code>)</li>\n<li><code>options.stencil</code> If fbo has a stencil buffer (default: <code>false</code>)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"methods\">Methods</h2>\n<h3 id=\"fbo-bind-\"><code>fbo.bind()</code></h3>\n<p>Binds the framebuffer object to the display.  To rebind the original drawing buffer, you can just call WebGL directly:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>//Bind&#xA0;the&#xA0;drawing&#xA0;buffer</span></span></div><div class=\"line\"><span class=\"source js\"><span>gl.bindFramebuffer(gl.FRAMEBUFFER,&#xA0;null)</span></span></div>\n</code></pre>\n<h3 id=\"fbo-dispose-\"><code>fbo.dispose()</code></h3>\n<p>Destroys the framebuffer object and releases all associated resources</p>\n<h2 id=\"properties\">Properties</h2>\n<h3 id=\"fbo-shape\"><code>fbo.shape</code></h3>\n<p>Returns the shape of the frame buffer object.  Writing to this property resizes the framebuffer.  For example,</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>fbo.shape&#xA0;=&#xA0;[&#xA0;newWidth,&#xA0;newHeight&#xA0;]</span></span></div>\n</code></pre>\n<h3 id=\"fbo-gl\"><code>fbo.gl</code></h3>\n<p>A reference to the WebGL context</p>\n<h3 id=\"fbo-handle\"><code>fbo.handle</code></h3>\n<p>A handle to the underlying Framebuffer object.</p>\n<h3 id=\"fbo-color\"><code>fbo.color</code></h3>\n<p>An array containing <a href=\"https://github.com/stackgl/gl-texture2d\"><code>gl-texture2d</code></a> objects representing the buffers.  </p>\n<h3 id=\"fbo-depth\"><code>fbo.depth</code></h3>\n<p>The depth/stencil component of the FBO.  Stored as a <a href=\"https://github.com/stackgl/gl-texture2d\"><code>gl-texture2d</code></a>.  If not present, is <code>null</code>.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2013-2014 Mikola Lysenko. MIT License</p>\n"}