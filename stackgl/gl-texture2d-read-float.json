{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/gl-texture2d-read-float\">gl-texture2d-read-float</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>Read out the contents of a floating-point\n<a href=\"http://github.com/stackgl/gl-texture2d\">gl-texture2d</a>.</p>\n<p>This will <em>eventually</em> be supported natively in WebGL\n<a href=\"https://www.khronos.org/opengles/sdk/docs/man31/html/glReadPixels.xhtml\">(it&apos;s listed in the OpenGL ES 3 spec)</a>,\nbut this fills that need until then!</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://nodei.co/npm/gl-texture2d-read-float/\"></a></p>\n<h3 id=\"read-gltex2d-done-err-data-\"><code>read(glTex2d, done(err, data))</code></h3>\n<p>Reads out the contents of <code>glTex2d</code>, which should be an instance of\n<code>gl-texture2d</code>. When complete, <code>done(err, data)</code> will be called where <code>data</code> is\na <code>Float32Array</code> containing the resulting floats in the texture.</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>const&#xA0;canvas&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;document.createElement(&apos;canvas&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;gl&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;require(&apos;gl-context&apos;)(canvas)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;read&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;require(&apos;gl-texture2d-read-float&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;Texture2d&#xA0;=&#xA0;require(&apos;gl-texture2d&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;baboon&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;require(&apos;baboon-image&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;assert&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;require(&apos;assert&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;texture&#xA0;&#xA0;=&#xA0;Texture2d(gl,&#xA0;baboon)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>read(texture,&#xA0;function(err,&#xA0;data)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;if&#xA0;(err)&#xA0;throw&#xA0;err</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;assert.deepEqual(data,&#xA0;baboon.data)</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div>\n</code></pre>\n<p>A few things to note:</p>\n<ul>\n<li>Right now, this is slow as it requires reading data back from the GPU.\nThere&apos;s not much that can be done about this for the time being unfortunately.</li>\n<li>The data is retrieved synchronously under the hood, but the API has been made\nasynchronous in preparation for WebGL&apos;s eventual async <code>readPixels</code> equivalent.</li>\n<li>Only <code>gl.RGBA</code>/<code>gl.FLOAT</code> textures are currently supported. Pull requests are,\nhowever, very welcome! :)</li>\n</ul>\n<h2 id=\"contributing\">Contributing</h2>\n<p>See <a href=\"https://github.com/stackgl/contributing\">stackgl/contributing</a> for details.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT. See <a href=\"http://github.com/stackgl/gl-texture2d-read-float/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}