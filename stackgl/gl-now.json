{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/gl-now\">gl-now</a><div class=\"contrib\"></div></h1>\n<p>Create a WebGL context right now!</p>\n<p>This module is an extension of <a href=\"https://github.com/mikolalysenko/game-shell\">game-shell</a> that creates a WebGL enabled canvas and adds it to the specified container.</p>\n<h2 id=\"example\">Example</h2>\n<p><a href=\"http://mikolalysenko.github.io/gl-now/\">Try this demo in your browser</a></p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>//Initialize&#xA0;shell</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;shell&#xA0;=&#xA0;require(&quot;gl-now&quot;)()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>shell.on(&quot;gl-init&quot;,&#xA0;function()&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;gl&#xA0;=&#xA0;shell.gl</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Create&#xA0;fragment&#xA0;shader</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;fs&#xA0;=&#xA0;gl.createShader(gl.FRAGMENT_SHADER)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.shaderSource(fs,&#xA0;[</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&quot;void&#xA0;main()&#xA0;{&quot;,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&quot;gl_FragColor&#xA0;=&#xA0;vec4(1,&#xA0;0,&#xA0;0,&#xA0;1);&quot;,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&quot;}&quot;].join(&quot;\\n&quot;))</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.compileShader(fs)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Create&#xA0;vertex&#xA0;shader</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;vs&#xA0;=&#xA0;gl.createShader(gl.VERTEX_SHADER)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.shaderSource(vs,&#xA0;[</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&quot;attribute&#xA0;vec3&#xA0;position;&quot;,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&quot;void&#xA0;main()&#xA0;{&quot;,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&quot;gl_Position&#xA0;=&#xA0;vec4(position,&#xA0;1.0);&quot;,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&quot;}&quot;].join(&quot;\\n&quot;))</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.compileShader(vs)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Link</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;shader&#xA0;=&#xA0;gl.createProgram()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.attachShader(shader,&#xA0;fs)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.attachShader(shader,&#xA0;vs)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.linkProgram(shader)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.useProgram(shader)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Create&#xA0;buffer</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.bindBuffer(gl.ARRAY_BUFFER,&#xA0;gl.createBuffer())</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.bufferData(gl.ARRAY_BUFFER,&#xA0;new&#xA0;Float32Array([</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;-1,&#xA0;0,&#xA0;0,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;0,&#xA0;-1,&#xA0;0,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;1,&#xA0;1,&#xA0;0</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;]),&#xA0;gl.STATIC_DRAW)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Set&#xA0;up&#xA0;attribute&#xA0;pointer</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;position_attribute&#xA0;=&#xA0;gl.getAttribLocation(shader,&#xA0;&quot;position&quot;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.enableVertexAttribArray(position_attribute)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.vertexAttribPointer(position_attribute,&#xA0;3,&#xA0;gl.FLOAT,&#xA0;false,&#xA0;0,&#xA0;0)</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>shell.on(&quot;gl-render&quot;,&#xA0;function(t)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;gl&#xA0;=&#xA0;shell.gl</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//Draw&#xA0;arrays</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl.drawArrays(gl.TRIANGLES,&#xA0;0,&#xA0;3)</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>shell.on(&quot;gl-error&quot;,&#xA0;function(e)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;throw&#xA0;new&#xA0;Error(&quot;WebGL&#xA0;not&#xA0;supported&#xA0;:(&quot;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div>\n</code></pre>\n<p>Result:</p>\n<p><img src=\"https://raw.github.com/mikolalysenko/gl-now/master/screenshot.png\"></p>\n<h2 id=\"install\">Install</h2>\n<pre><code>npm install gl-now\n</code></pre><h2 id=\"api\">API</h2>\n<h3 id=\"var-shell-require-gl-now-options-\"><code>var shell = require(&quot;gl-now&quot;)([options])</code></h3>\n<p>Options is an object that takes the same fields as in <a href=\"https://github.com/mikolalysenko/game-shell#var-shell--requiregame-shelloptions\">game-shell</a> with the following additions:</p>\n<ul>\n<li><code>clearFlags</code> a list of flags to clear on redraw.  (Default <code>gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT</code>)</li>\n<li><code>clearColor</code> a length 4 array representing background clear color.  (Defaults to element&apos;s background-color or else <code>[0.2, 0.4, 0.8, 1.0]</code></li>\n<li><code>clearDepth</code> value to clear depth buffer to (Defaults to <code>1.0</code>)</li>\n<li><code>clearStencil</code> value to clear stencil buffer to (Defaults to <code>0</code>)</li>\n<li><code>extensions</code> a list of necessary WebGL extensions to support.  Vendor prefix optional.  You can access these extensions later using <a href=\"https://npmjs.org/package/webglew\">webglew</a></li>\n<li><code>glOptions</code> on object containing a set of parameters which are passed to the webgl context directly.</li>\n</ul>\n<h2 id=\"events\">Events</h2>\n<p>In addition to all the events inherited from <a href=\"https://github.com/mikolalysenko/game-shell#events\">game-shell</a>, <code>gl-now</code> adds the following events:</p>\n<h3 id=\"gl-init\"><code>gl-init</code></h3>\n<p>Called once the WebGL context is initialized</p>\n<h3 id=\"gl-render-frame_time-\"><code>gl-render([frame_time])</code></h3>\n<p>Called at the start of the WebGL frame.</p>\n<h3 id=\"gl-error-reason-\"><code>gl-error(reason)</code></h3>\n<p>Called if there was an error initializing webgl</p>\n<h3 id=\"gl-resize-width-height-\"><code>gl-resize(width, height)</code></h3>\n<p>Called when the WebGL window is resized</p>\n<h2 id=\"properties\">Properties</h2>\n<p>Finally <code>gl-now</code> adds the following extra properties to <code>game-shell</code>:</p>\n<h3 id=\"shell-gl\"><code>shell.gl</code></h3>\n<p>The WebGL context</p>\n<h3 id=\"shell-canvas\"><code>shell.canvas</code></h3>\n<p>The canvas object</p>\n<h3 id=\"shell-width\"><code>shell.width</code></h3>\n<p>The width of the gl context</p>\n<h3 id=\"shell-height\"><code>shell.height</code></h3>\n<p>The height of the context</p>\n<h3 id=\"shell-scale\"><code>shell.scale</code></h3>\n<p>The scale of the context, which defaults to 1. Set it to higher values for\na smaller viewport and faster rendering at the expense of quality.</p>\n<h3 id=\"shell-mouse\"><code>shell.mouse</code></h3>\n<p>A length 2 vector giving the current coordinate of the mouse on the screen</p>\n<h3 id=\"shell-prevmouse\"><code>shell.prevMouse</code></h3>\n<p>A length 2 vector giving the previous coordinate of the mouse on the screen</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2013 Mikola Lysenko. MIT License</p>\n"}