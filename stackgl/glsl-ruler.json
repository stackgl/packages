{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/glsl-ruler\">glsl-ruler</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>Helper module for debugging raytraced SDFs inspired by\n<a href=\"https://twitter.com/cupe_cupe\">Johann Korndorfer&apos;s</a>\n<a href=\"https://www.youtube.com/watch?v=s8nFqwOho-s\">&quot;How to Create Content with Signed Distance Functions&quot;</a>\ntalk at <a href=\"http://nv.scene.org/2015/\">NVScene 2015</a>.</p>\n<p>Thanks to <a href=\"https://twitter.com/notlion\">Ryan Alexander</a> for\nhis <a href=\"https://www.shadertoy.com/view/XlB3DV\">example implementation on Shadertoy</a> :sparkles:</p>\n<p><a href=\"http://stack.gl/glsl-ruler/\"><img src=\"http://i.imgur.com/ECqABqF.gif\" alt></a></p>\n<p><strong><a href=\"http://stack.gl/glsl-ruler/\">view demo</a></strong></p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://nodei.co/npm/glsl-ruler/\"></a></p>\n<h3 id=\"trace-require-glsl-ruler-trace-map-steps-\"><code>trace = require(glsl-ruler/trace, &lt;map&gt;, &lt;steps&gt;)</code></h3>\n<p>Currently, <code>glsl-ruler</code> needs to handle raytracing on your behalf &#x2013; it does so using an API very similar to <a href=\"http://github.com/stackgl/glsl-raytrace\">glsl-raytrace</a>. For further details, check out that project&apos;s documentation.</p>\n<h4 id=\"vec3-trace-vec3-ro-vec3-rd-\"><code>vec3 trace(vec3 ro, vec3 rd)</code></h4>\n<p>The key difference here between <code>glsl-ruler/trace</code> and <code>glsl-raytrace</code> is that instead of returning a <code>vec2</code>, <code>trace</code> will return a <code>vec3</code> with the elements corresponding to:</p>\n<ol>\n<li>The signed distance value retrieved from a raytrace of your <code>map</code> function merged with the ruler plane.</li>\n<li>A second attribute for assigning an ID to surfaces. This will be <code>-1.0</code> if the ray hit the plane.</li>\n<li>The signed distance value retrieved from a raytrace of only\nyour <code>map</code> function. You can then use this to color the plane.</li>\n</ol>\n<h3 id=\"color-require-glsl-color-\"><code>color = require(glsl-color)</code></h3>\n<h4 id=\"vec3-color-float-distance-\"><code>vec3 color(float distance)</code></h4>\n<p>Returns an RGB color for the plane based on the <code>distance</code> value of your signed distance field.</p>\n<h2 id=\"example\">Example</h2>\n<p>By combining the above two modules together, you can quickly tweak existing glslify-driven raytracers to debug and explore 3D SDFs:</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>vec2</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>doModel</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;p</span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>;</span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;camera&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>&apos;glsl-turntable-camera&apos;</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;trace&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>&apos;glsl-ruler/trace&apos;,&#xA0;map&#xA0;=&#xA0;doModel,&#xA0;steps&#xA0;=&#xA0;90</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>#</span><span class=\"meta preprocessor keyword import define glsl\"><span>pragma&#xA0;glslify:</span></span><span class=\"entity name function glsl\"><span>&#xA0;color&#xA0;</span></span><span class=\"operator glsl\"><span>=&#xA0;</span></span><span class=\"keyword operator glsl\"><span>require</span></span><span>(</span><span class=\"string quoted double\"><span>&apos;glsl-ruler/color&apos;</span></span><span>)</span><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>&#xA0;creates&#xA0;a&#xA0;unit&#xA0;sphere&#xA0;at&#xA0;the&#xA0;origin</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>vec2</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>doModel</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;p</span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"keyword control glsl\"><span>return</span></span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec2</span></span><span>(</span><span class=\"support function any-method c\"><span>length</span></span><span>(</span></span><span>p)&#xA0;-&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>,&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>void</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>main</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;color&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec3</span></span><span>(</span></span><span class=\"constant numeric c\"><span>0</span></span><span>);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;rayOrigin,&#xA0;rayDirection;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;&#xA0;</span></span><span class=\"support function any-method c\"><span>camera</span></span><span>(</span></span><span>iGlobalTime&#xA0;*&#xA0;</span><span class=\"constant numeric c\"><span>0.175</span></span><span>,&#xA0;</span><span class=\"constant numeric c\"><span>2.5</span></span><span>,&#xA0;</span><span class=\"constant numeric c\"><span>3.0</span></span><span>,&#xA0;iResolution,&#xA0;rayOrigin,&#xA0;rayDirection);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>&#xA0;This&#xA0;works&#xA0;just&#xA0;the&#xA0;same&#xA0;as&#xA0;glsl-raytrace&#xA0;would,</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>&#xA0;however&#xA0;returning&#xA0;a&#xA0;vec3&#xA0;instead&#xA0;of&#xA0;a&#xA0;vec2.</span><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;t&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>raytrace</span></span><span>(</span></span><span>rayOrigin,&#xA0;rayDirection);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"keyword control glsl\"><span>if</span></span><span class=\"meta initialization c\"><span>&#xA0;</span><span class=\"punctuation definition parameters c\"><span>(</span></span></span><span>t</span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>x</span></span><span>&#xA0;&gt;&#xA0;-</span><span class=\"constant numeric c\"><span>0.5</span></span><span>)&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;pos&#xA0;=&#xA0;rayOrigin&#xA0;+&#xA0;t</span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>x</span></span><span>&#xA0;*&#xA0;rayDirection;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;nor&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>getNormal</span></span><span>(</span></span><span>pos);</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;color&#xA0;=&#xA0;nor&#xA0;*&#xA0;</span><span class=\"constant numeric c\"><span>0.5</span></span><span>&#xA0;+&#xA0;</span><span class=\"constant numeric c\"><span>0.5</span></span><span>;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>&#xA0;if&#xA0;t.y&#xA0;is&#xA0;below&#xA0;0.5,&#xA0;then&#xA0;you&#xA0;need&#xA0;to&#xA0;draw</span><span>&#xA0;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>&#xA0;the&#xA0;ruler&#xA0;plane&#xA0;instead.&#xA0;Simply&#xA0;feed&#xA0;it&#xA0;t.z,</span><span>&#xA0;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>&#xA0;the&#xA0;SDF&#xA0;from&#xA0;your&#xA0;map&#xA0;function,&#xA0;to&#xA0;get&#xA0;a&#xA0;color</span><span>&#xA0;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span class=\"punctuation whitespace comment leading c++\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash c++\"><span class=\"punctuation definition comment c++\"><span>//</span></span><span>&#xA0;in&#xA0;return.</span><span>&#xA0;</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;color&#xA0;=&#xA0;t</span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>y</span></span><span>&#xA0;&lt;&#xA0;-</span><span class=\"constant numeric c\"><span>0.5</span></span><span>&#xA0;?</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>gradient</span></span><span>(</span></span><span>t</span><span class=\"punctuation separator variable-access c\"><span>.</span></span><span class=\"variable other dot-access c\"><span>z</span></span><span>)&#xA0;:&#xA0;color;</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"support variable glsl\"><span>gl_FragColor</span></span><span>&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec4</span></span><span>(</span></span><span>color,&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div>\n</code></pre>\n<p>For a full example, see <a href=\"http://github.com/stackgl/glsl-ruler/blob/master/demo.js\">demo.js</a>.</p>\n<h2 id=\"contributing\">Contributing</h2>\n<p>See <a href=\"https://github.com/stackgl/contributing\">stackgl/contributing</a> for details.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT. See <a href=\"http://github.com/stackgl/glsl-ruler/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}