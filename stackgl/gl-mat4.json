{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/gl-mat4\">gl-mat4 </a><div class=\"contrib\"></div></h1>\n<p>Part of a fork of <a href=\"http://github.com/toji\">@toji</a>&apos;s\n<a href=\"http://github.com/toji/gl-matrix\">gl-matrix</a> split into smaller pieces: this\npackage contains <code>glMatrix.mat4</code>.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://nodei.co/npm/gl-mat4/\"></a></p>\n<h3 id=\"mat4-require-gl-mat4-\"><code>mat4 = require(&apos;gl-mat4&apos;)</code></h3>\n<p>Will load all of the module&apos;s functionality and expose it on a single\nobject. Note that any of the methods may also be required directly\nfrom their files.</p>\n<p>For example, the following are equivalent:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;scale&#xA0;=&#xA0;require(&apos;gl-mat4&apos;).scale</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;scale&#xA0;=&#xA0;require(&apos;gl-mat4/scale&apos;)</span></span></div>\n</code></pre>\n<h2 id=\"api\">API</h2>\n<ul>\n<li><a href=\"#adjointoutmat4-amat4\">adjoint()</a></li>\n<li><a href=\"#cloneamat4\">clone()</a></li>\n<li><a href=\"#copyoutmat4-amat4\">copy()</a></li>\n<li><a href=\"#create\">create()</a></li>\n<li><a href=\"#determinantamat4\">determinant()</a></li>\n<li><a href=\"#fromquatoutmat4-qquat4\">fromQuat()</a></li>\n<li><a href=\"#fromrotationoutmat4-radnumber-axisvec3\">fromRotation()</a></li>\n<li><a href=\"#fromrotationtranslationoutmat4-qquat4-vvec3\">fromRotationTranslation()</a></li>\n<li><a href=\"#fromscalingoutmat4-vvec3\">fromScaling()</a></li>\n<li><a href=\"#fromtranslationoutmat4-vvec3\">fromTranslation()</a></li>\n<li><a href=\"#fromxrotationoutmat4-radnumber\">fromXRotation()</a></li>\n<li><a href=\"#fromyrotationoutmat4-radnumber\">fromYRotation()</a></li>\n<li><a href=\"#fromzrotationoutmat4-radnumber\">fromZRotation()</a></li>\n<li><a href=\"#frustumoutmat4-leftnumber-rightnumber-bottomnumber-topnumber-nearnumber-farnumber\">frustum()</a></li>\n<li><a href=\"#identityoutmat4\">identity()</a></li>\n<li><a href=\"#invertoutmat4-amat4\">invert()</a></li>\n<li><a href=\"#lookatoutmat4-eyevec3-centervec3-upvec3\">lookAt()</a></li>\n<li><a href=\"#multiplyoutmat4-amat4-bmat4\">multiply()</a></li>\n<li><a href=\"#orthooutmat4-leftnumber-rightnumber-bottomnumber-topnumber-nearnumber-farnumber\">ortho()</a></li>\n<li><a href=\"#perspectiveoutmat4-fovynumber-aspectnumber-nearnumber-farnumber\">perspective()</a></li>\n<li><a href=\"#perspectivefromfieldofviewoutmat4-fovobject-nearnumber-farnumber\">perspectiveFromFieldOfView()</a></li>\n<li><a href=\"#rotateoutmat4-amat4-radnumber-axisvec3\">rotate()</a></li>\n<li><a href=\"#rotatexoutmat4-amat4-radnumber\">rotateX()</a></li>\n<li><a href=\"#rotateyoutmat4-amat4-radnumber\">rotateY()</a></li>\n<li><a href=\"#rotatezoutmat4-amat4-radnumber\">rotateZ()</a></li>\n<li><a href=\"#scaleoutmat4-amat4-vvec3\">scale()</a></li>\n<li><a href=\"#strmatmat4\">str()</a></li>\n<li><a href=\"#translateoutmat4-amat4-vvec3\">translate()</a></li>\n<li><a href=\"#transposeoutmat4-amat4\">transpose()</a></li>\n</ul>\n<h2 id=\"adjoint-out-mat4-a-mat4-\">adjoint(out:mat4, a:mat4)</h2>\n<p>  Calculates the adjugate of a mat4</p>\n<h2 id=\"clone-a-mat4-\">clone(a:mat4)</h2>\n<p>  Creates a new mat4 initialized with values from an existing matrix</p>\n<h2 id=\"copy-out-mat4-a-mat4-\">copy(out:mat4, a:mat4)</h2>\n<p>  Copy the values from one mat4 to another</p>\n<h2 id=\"create-\">create()</h2>\n<p>  Creates a new identity mat4</p>\n<h2 id=\"determinant-a-mat4-\">determinant(a:mat4)</h2>\n<p>  Calculates the determinant of a mat4</p>\n<h2 id=\"fromquat-out-mat4-q-quat4-\">fromQuat(out:mat4, q:quat4)</h2>\n<p>  Creates a matrix from a quaternion rotation.</p>\n<h2 id=\"fromrotation-out-mat4-rad-number-axis-vec3-\">fromRotation(out:mat4, rad:number, axis:vec3)</h2>\n<p>  Creates a matrix from a given angle around a given axis\n  This is equivalent to (but much faster than):</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.identity(dest);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.rotate(dest,&#xA0;dest,&#xA0;rad,&#xA0;axis);</span></span></div>\n</code></pre>\n<h2 id=\"fromrotationtranslation-out-mat4-q-quat4-v-vec3-\">fromRotationTranslation(out:mat4, q:quat4, v:vec3)</h2>\n<p>  Creates a matrix from a quaternion rotation and vector translation. This is equivalent to (but much faster than):</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.identity(dest);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.translate(dest,&#xA0;vec);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;quatMat&#xA0;=&#xA0;mat4.create();</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;quat4.toMat4(quat,&#xA0;quatMat);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.multiply(dest,&#xA0;quatMat);</span></span></div>\n</code></pre>\n<h2 id=\"fromscaling-out-mat4-v-vec3-\">fromScaling(out:mat4, v:vec3)</h2>\n<p>  Creates a matrix from a vector scaling. This is equivalent to (but much faster than):</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.identity(dest);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.translate(dest,&#xA0;dest,&#xA0;vec);</span></span></div>\n</code></pre>\n<h2 id=\"fromtranslation-out-mat4-v-vec3-\">fromTranslation(out:mat4, v:vec3)</h2>\n<p>  Creates a matrix from a vector translation. This is equivalent to (but much faster than):</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.identity(dest);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.translate(dest,&#xA0;dest,&#xA0;vec);</span></span></div>\n</code></pre>\n<h2 id=\"fromtranslation-out-mat4-v-vec3-\">fromTranslation(out:mat4, v:vec3)</h2>\n<p>  Creates a matrix from a vector translation\n  This is equivalent to (but much faster than):</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.identity(dest);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.translate(dest,&#xA0;dest,&#xA0;vec);</span></span></div>\n</code></pre>\n<h2 id=\"fromxrotation-out-mat4-rad-number-\">fromXRotation(out:mat4, rad:Number)</h2>\n<p>  Creates a matrix from the given angle around the X axis\n  This is equivalent to (but much faster than):</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.identity(dest)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.rotateX(dest,&#xA0;dest,&#xA0;rad)</span></span></div>\n</code></pre>\n<h2 id=\"fromyrotation-out-mat4-rad-number-\">fromYRotation(out:mat4, rad:Number)</h2>\n<p>  Creates a matrix from the given angle around the Y axis\n  This is equivalent to (but much faster than):</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.identity(dest)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.rotateY(dest,&#xA0;dest,&#xA0;rad)</span></span></div>\n</code></pre>\n<h2 id=\"fromzrotation-out-mat4-rad-number-\">fromZRotation(out:mat4, rad:Number)</h2>\n<p>  Creates a matrix from the given angle around the Z axis\n  This is equivalent to (but much faster than):</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.identity(dest)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.rotateZ(dest,&#xA0;dest,&#xA0;rad)</span></span></div>\n</code></pre>\n<h2 id=\"frustum-out-mat4-left-number-right-number-bottom-number-top-number-near-number-far-number-\">frustum(out:mat4, left:Number, right:Number, bottom:Number, top:Number, near:Number, far:Number)</h2>\n<p>  Generates a frustum matrix with the given bounds</p>\n<h2 id=\"identity-out-mat4-\">identity(out:mat4)</h2>\n<p>  Set a mat4 to the identity matrix</p>\n<h2 id=\"invert-out-mat4-a-mat4-\">invert(out:mat4, a:mat4)</h2>\n<p>  Inverts a mat4</p>\n<h2 id=\"lookat-out-mat4-eye-vec3-center-vec3-up-vec3-\">lookAt(out:mat4, eye:vec3, center:vec3, up:vec3)</h2>\n<p>  Generates a look-at matrix with the given eye position, focal point, and up axis</p>\n<h2 id=\"multiply-out-mat4-a-mat4-b-mat4-\">multiply(out:mat4, a:mat4, b:mat4)</h2>\n<p>  Multiplies two mat4&apos;s</p>\n<h2 id=\"ortho-out-mat4-left-number-right-number-bottom-number-top-number-near-number-far-number-\">ortho(out:mat4, left:number, right:number, bottom:number, top:number, near:number, far:number)</h2>\n<p>  Generates a orthogonal projection matrix with the given bounds</p>\n<h2 id=\"perspective-out-mat4-fovy-number-aspect-number-near-number-far-number-\">perspective(out:mat4, fovy:number, aspect:number, near:number, far:number)</h2>\n<p>  Generates a perspective projection matrix with the given bounds</p>\n<h2 id=\"perspectivefromfieldofview-out-mat4-fov-object-near-number-far-number-\">perspectiveFromFieldOfView(out:mat4, fov:object, near:number, far:number)</h2>\n<p>  Generates a perspective projection matrix with the given field of view.</p>\n<h2 id=\"rotate-out-mat4-a-mat4-rad-number-axis-vec3-\">rotate(out:mat4, a:mat4, rad:Number, axis:vec3)</h2>\n<p>  Rotates a mat4 by the given angle</p>\n<h2 id=\"rotatex-out-mat4-a-mat4-rad-number-\">rotateX(out:mat4, a:mat4, rad:Number)</h2>\n<p>  Rotates a matrix by the given angle around the X axis</p>\n<h2 id=\"rotatey-out-mat4-a-mat4-rad-number-\">rotateY(out:mat4, a:mat4, rad:Number)</h2>\n<p>  Rotates a matrix by the given angle around the Y axis</p>\n<h2 id=\"rotatez-out-mat4-a-mat4-rad-number-\">rotateZ(out:mat4, a:mat4, rad:Number)</h2>\n<p>  Rotates a matrix by the given angle around the Z axis</p>\n<h2 id=\"scale-out-mat4-a-mat4-v-vec3-\">scale(out:mat4, a:mat4, v:vec3)</h2>\n<p>  Scales the mat4 by the dimensions in the given vec3</p>\n<h2 id=\"str-mat-mat4-\">str(mat:mat4)</h2>\n<p>  Returns a string representation of a mat4</p>\n<h2 id=\"translate-out-mat4-a-mat4-v-vec3-\">translate(out:mat4, a:mat4, v:vec3)</h2>\n<p>  Translate a mat4 by the given vector</p>\n<h2 id=\"transpose-out-mat4-a-mat4-\">transpose(out:mat4, a:mat4)</h2>\n<p>  Transpose the values of a mat4</p>\n<h2 id=\"license\">License</h2>\n<p><a href=\"http://en.wikipedia.org/wiki/Zlib_License\">zlib</a>. See <a href=\"https://github.com/stackgl/gl-mat4/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}