{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/gl-mat3\">gl-mat3 </a><div class=\"contrib\"></div></h1>\n<p>Part of a fork of <a href=\"http://github.com/toji\">@toji</a>&apos;s\n<a href=\"http://github.com/toji/gl-matrix\">gl-matrix</a> split into smaller pieces: this\npackage contains <code>glMatrix.mat3</code>.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://nodei.co/npm/gl-mat3/\"></a></p>\n<h3 id=\"mat3-require-gl-mat3-\"><code>mat3 = require(&apos;gl-mat3&apos;)</code></h3>\n<p>Will load all of the module&apos;s functionality and expose it on a single\nobject. Note that any of the methods may also be required directly\nfrom their files.</p>\n<p>For example, the following are equivalent:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;scale&#xA0;=&#xA0;require(&apos;gl-mat3&apos;).scale</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;scale&#xA0;=&#xA0;require(&apos;gl-mat3/scale&apos;)</span></span></div>\n</code></pre>\n<h2 id=\"api\">API</h2>\n<ul>\n<li><a href=\"#mat3adjointoutmat3amat3\">mat3.adjoint()</a></li>\n<li><a href=\"#mat3cloneamat3\">mat3.clone()</a></li>\n<li><a href=\"#mat3copyoutmat3amat3\">mat3.copy()</a></li>\n<li><a href=\"#mat3create\">mat3.create()</a></li>\n<li><a href=\"#mat3determinantamat3\">mat3.determinant()</a></li>\n<li><a href=\"#mat3frobamat3\">mat3.frob()</a></li>\n<li><a href=\"#mat3frommat2doutmat3amat2d\">mat3.fromMat2d()</a></li>\n<li><a href=\"#mat3frommat4outmat3amat4\">mat3.fromMat4()</a></li>\n<li><a href=\"#mat3fromquatoutmat3qquat\">mat3.fromQuat()</a></li>\n<li><a href=\"#mat3identityoutmat3\">mat3.identity()</a></li>\n<li><a href=\"#mat3invertoutmat3amat3\">mat3.invert()</a></li>\n<li><a href=\"#mat3multiplyoutmat3amat3bmat3\">mat3.multiply()</a></li>\n<li><a href=\"#mat3normalfrommat4outmat3amat4\">mat3.normalFromMat4()</a></li>\n<li><a href=\"#mat3rotateoutmat3amat3radnumber\">mat3.rotate()</a></li>\n<li><a href=\"#mat3scaleoutmat3amat3vvec2\">mat3.scale()</a></li>\n<li><a href=\"#mat3strmatmat3\">mat3.str()</a></li>\n<li><a href=\"#mat3translateoutmat3amat3vvec2\">mat3.translate()</a></li>\n<li><a href=\"#mat3transposeoutmat3amat3\">mat3.transpose()</a></li>\n</ul>\n<h2 id=\"mat3-adjoint-out-mat3-a-mat3-\">mat3.adjoint(out:mat3, a:mat3)</h2>\n<p>  Calculates the adjugate of a mat3</p>\n<h2 id=\"mat3-clone-a-mat3-\">mat3.clone(a:mat3)</h2>\n<p>  Creates a new mat3 initialized with values from an existing matrix</p>\n<h2 id=\"mat3-copy-out-mat3-a-mat3-\">mat3.copy(out:mat3, a:mat3)</h2>\n<p>  Copy the values from one mat3 to another</p>\n<h2 id=\"mat3-create-\">mat3.create()</h2>\n<p>  Creates a new identity mat3</p>\n<h2 id=\"mat3-determinant-a-mat3-\">mat3.determinant(a:mat3)</h2>\n<p>  Calculates the determinant of a mat3</p>\n<h2 id=\"mat3-frob-a-mat3-\">mat3.frob(a:mat3)</h2>\n<p>  Returns Frobenius norm of a mat3</p>\n<h2 id=\"mat3-frommat2d-out-mat3-a-mat2d-\">mat3.fromMat2d(out:mat3, a:mat2d)</h2>\n<p>  Copies the values from a mat2d into a mat3</p>\n<h2 id=\"mat3-frommat4-out-mat3-a-mat4-\">mat3.fromMat4(out:mat3, a:mat4)</h2>\n<p>  Copies the upper-left 3x3 values into the given mat3.</p>\n<h2 id=\"mat3-fromquat-out-mat3-q-quat-\">mat3.fromQuat(out:mat3, q:quat)</h2>\n<p>  Calculates a 3x3 matrix from the given quaternion</p>\n<h2 id=\"mat3-identity-out-mat3-\">mat3.identity(out:mat3)</h2>\n<p>  Set a mat3 to the identity matrix</p>\n<h2 id=\"mat3-invert-out-mat3-a-mat3-\">mat3.invert(out:mat3, a:mat3)</h2>\n<p>  Inverts a mat3</p>\n<h2 id=\"mat3-multiply-out-mat3-a-mat3-b-mat3-\">mat3.multiply(out:mat3, a:mat3, b:mat3)</h2>\n<p>  Multiplies two mat3&apos;s</p>\n<h2 id=\"mat3-normalfrommat4-out-mat3-a-mat4-\">mat3.normalFromMat4(out:mat3, a:mat4)</h2>\n<p>  Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix</p>\n<h2 id=\"mat3-rotate-out-mat3-a-mat3-rad-number-\">mat3.rotate(out:mat3, a:mat3, rad:Number)</h2>\n<p>  Rotates a mat3 by the given angle</p>\n<h2 id=\"mat3-scale-out-mat3-a-mat3-v-vec2-\">mat3.scale(out:mat3, a:mat3, v:vec2)</h2>\n<p>  Scales the mat3 by the dimensions in the given vec2</p>\n<h2 id=\"mat3-str-mat-mat3-\">mat3.str(mat:mat3)</h2>\n<p>  Returns a string representation of a mat3</p>\n<h2 id=\"mat3-translate-out-mat3-a-mat3-v-vec2-\">mat3.translate(out:mat3, a:mat3, v:vec2)</h2>\n<p>  Translate a mat3 by the given vector</p>\n<h2 id=\"mat3-transpose-out-mat3-a-mat3-\">mat3.transpose(out:mat3, a:mat3)</h2>\n<p>  Transpose the values of a mat3</p>\n<h2 id=\"license\">License</h2>\n<p><a href=\"http://en.wikipedia.org/wiki/Zlib_License\">zlib</a>. See <a href=\"http://github.com/hughsk/gl-mat3/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}