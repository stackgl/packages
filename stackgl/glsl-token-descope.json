{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/glsl-token-descope\">glsl-token-descope</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>&quot;Descope&quot; an array of GLSL tokens such that they can be safely inlined alongside\nwithin another shader without causing any global variable conflicts.</p>\n<p>Useful for modularising GLSL source files, e.g. as is done in\n<a href=\"http://github.com/stackgl/glslify\">glslify</a>, but should be useful in other\ntools too.</p>\n<p>Written with WebGL&apos;s GLSL syntax in mind &#x2013; all the same, pull requests to\nsupport other variants would be much appreciated :)</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://nodei.co/npm/glsl-token-descope/\"></a></p>\n<h3 id=\"descope-tokens-rename-name-\"><code>descope(tokens, [rename(name)])</code></h3>\n<p>Takes an array of GLSL <code>tokens</code> produced by\n<a href=\"http://github.com/stackgl/glsl-tokenizer\">glsl-tokenizer</a> and renames variables\nto avoid global conflicts by modifying their &quot;data&quot; property in-place.</p>\n<p>For example:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;tokenize&#xA0;&#xA0;=&#xA0;require(&apos;glsl-tokenizer/string&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;descope&#xA0;&#xA0;&#xA0;=&#xA0;require(&apos;glsl-token-descope&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;stringify&#xA0;=&#xA0;require(&apos;glsl-token-string&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;src&#xA0;=&#xA0;`</span></span></div><div class=\"line\"><span class=\"source js\"><span>precision&#xA0;mediump&#xA0;float;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>uniform&#xA0;mat4&#xA0;&#xA0;top1;</span></span></div><div class=\"line\"><span class=\"source js\"><span>uniform&#xA0;float&#xA0;top2;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>void&#xA0;main()&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;float&#xA0;x&#xA0;=&#xA0;1.0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;gl_FragColor&#xA0;=&#xA0;vec4(vec3(x),&#xA0;top2);</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div><div class=\"line\"><span class=\"source js\"><span>`.trim()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;tokens&#xA0;=&#xA0;tokenize(src)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>console.log(stringify(descope(tokens)))</span></span></div>\n</code></pre>\n<p>Which should rename <code>main</code>, <code>top1</code> and <code>top2</code> to result in this output:</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>precision&#xA0;mediump&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>mat4</span></span><span>&#xA0;&#xA0;top1_0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;top2_1;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>void</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>main_2</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;x&#xA0;=&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"support variable glsl\"><span>gl_FragColor</span></span><span>&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec4</span></span><span>(</span><span class=\"support function any-method c\"><span>vec3</span></span><span>(</span></span><span>x),&#xA0;top2_1);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div>\n</code></pre>\n<p>Optionally, you may pass in a custom <code>rename</code> function as <code>descope</code>&apos;s second\nargument to choose how you rename your variables. For example, adding a custom\n<code>rename</code> function to the previous function:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>descope(tokens,&#xA0;function(name)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;return&#xA0;&apos;a_&apos;&#xA0;+&#xA0;name</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div>\n</code></pre>\n<p>Would result in the following shader:</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span>precision&#xA0;mediump&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>mat4</span></span><span>&#xA0;&#xA0;a_top1;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;a_top2;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>void</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>a_main</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"storage type glsl\"><span>float</span></span><span>&#xA0;x&#xA0;=&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;</span><span class=\"support variable glsl\"><span>gl_FragColor</span></span><span>&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec4</span></span><span>(</span><span class=\"support function any-method c\"><span>vec3</span></span><span>(</span></span><span>x),&#xA0;a_top2);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div>\n</code></pre>\n<h2 id=\"see-also\">See Also</h2>\n<ul>\n<li><a href=\"http://github.com/stackgl/glslify\">glslify</a></li>\n<li><a href=\"http://github.com/stackgl/glsl-token-scope\">glsl-token-scope</a></li>\n<li><a href=\"http://github.com/stackgl/glsl-token-depth\">glsl-token-depth</a></li>\n<li><a href=\"http://github.com/stackgl/glsl-token-properties\">glsl-token-properties</a></li>\n<li><a href=\"http://github.com/stackgl/glsl-token-assignments\">glsl-token-assignments</a></li>\n<li><a href=\"http://github.com/stackgl/glsl-token-string\">glsl-token-string</a></li>\n</ul>\n<h2 id=\"license\">License</h2>\n<p>MIT. See <a href=\"http://github.com/stackgl/glsl-token-descope/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}