{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/stackgl/glsl-token-defines\">glsl-token-defines</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>Retrieve the values defined with preprocessor statements in a selection of\n<a href=\"http://github.com/stackgl/glsl-tokenizer\">GLSL tokens</a>.</p>\n<p>Doesn&apos;t handle full function-style macros for the time being. Patches welcome!</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://nodei.co/npm/glsl-token-defines/\"></a></p>\n<h3 id=\"defs-defines-tokens-\"><code>defs = defines(tokens)</code></h3>\n<p>Where <code>tokens</code> is an array of tokens produced by\n<a href=\"http://github.com/stackgl/glsl-tokenizer\">glsl-tokenizer</a>.</p>\n<p>Returns an dictionary object where keys are the name of the defined variable,\nand values are the values of the defined variable. If a variable is not\nassigned a value, this will be an empty string.</p>\n<p>For example, the following:</p>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span class=\"meta preprocessor macro c\"><span>#</span><span class=\"keyword control import define c\"><span>define</span></span><span>&#xA0;</span><span class=\"entity name function preprocessor c\"><span>PI</span></span><span>&#xA0;</span><span class=\"constant numeric c\"><span>3.14</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta preprocessor macro c\"><span>#</span><span class=\"keyword control import define c\"><span>define</span></span><span>&#xA0;</span><span class=\"entity name function preprocessor c\"><span>TAU</span></span><span>&#xA0;(PI*</span><span class=\"constant numeric c\"><span>2</span></span><span>.)</span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta preprocessor macro c\"><span>#</span><span class=\"keyword control import define c\"><span>define</span></span><span>&#xA0;</span><span class=\"entity name function preprocessor c\"><span>VEC</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>vec3</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"constant numeric c\"><span>1</span></span><span>.</span><span class=\"punctuation section parens end c\"><span>)</span></span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta preprocessor macro c\"><span class=\"meta preprocessor macro c\"><span>#</span><span class=\"keyword control import define c\"><span>define</span></span><span>&#xA0;</span><span class=\"entity name function preprocessor c\"><span>EMPTY</span></span></span></span></span></div>\n</code></pre>\n<p>Would yield:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;PI:&#xA0;&apos;3.14&apos;,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;TAU:&#xA0;&apos;(PI*2.)&apos;,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;VEC:&#xA0;&apos;vec3(1.)&apos;,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;EMPTY:&#xA0;&apos;&apos;</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<h2 id=\"contributing\">Contributing</h2>\n<p>See <a href=\"https://github.com/stackgl/contributing\">stackgl/contributing</a> for details.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT. See <a href=\"http://github.com/stackgl/glsl-token-defines/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}