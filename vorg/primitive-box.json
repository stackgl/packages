{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/vorg/primitive-box\">primitive-box</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>A minimal box geometry for 3D rendering, NOT including normals, UVs.</p>\n<p>Only vertices and cell indices (quad faces). As this geometry is not triangulated it&apos;s not ready for rendering you might need to use e.g. <a href=\"https://www.npmjs.com/package/geom-triangulate\">geom-triangulate</a>.</p>\n<p>You are probably looking for <a href=\"https://www.npmjs.com/package/primitive-cube\">primitive-cube</a>. The difference is that cube has separate faces that can be textured while box does not. This is one solid mesh which makes it perfect for subdivisions.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://www.npmjs.com/package/primitive-box\"></a></p>\n<h4 id=\"mesh-createbox-sx-sy-sz-\"><code>mesh = createBox([sx, sy, sz])</code></h4>\n<p>Parameters:<br><code>sx</code> - size x, defaults to 1<br><code>sy</code> - size y, defaults to <code>sx</code><br><code>sz</code> - size z, defaults to <code>sx</code></p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createBox&#xA0;=&#xA0;require(&apos;primitive-box&apos;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;box&#xA0;=&#xA0;createCreate(1);</span></span></div>\n</code></pre>\n<p><code>cube</code> will have the following structure:</p>\n<pre><code>{\n  positions: [ [x, y, z], [x, y, z], ... ],\n  cells: [ [a, b, c, d], [c, d, e, f], ... ],\n}\n</code></pre><h2 id=\"demo\">Demo</h2>\n<p>Download or clone this repo and run:</p>\n<pre><code>cd demo\nnpm install\nnpm start\n</code></pre><h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/vorg/primitive-box/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}