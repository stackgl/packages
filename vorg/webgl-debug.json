{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/vorg/webgl-debug\">webgl-debug</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p>WebGL Debug Utils. This is a node port of <a href=\"https://github.com/KhronosGroup/WebGLDeveloperTools\">WebGLDeveloperTools</a> by Khronos Group.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://www.npmjs.com/package/webgl-debug\"></a></p>\n<p><code>var WebGLDebugUtil = require(&apos;webgl-debug&apos;);</code></p>\n<h2 id=\"examples\">Examples</h2>\n<p>Get error code string representation.</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;WebGLDebugUtil&#xA0;=&#xA0;require(&apos;webgl-debug&apos;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;str&#xA0;=&#xA0;WebGLDebugUtil.glEnumToString(gl.getError());</span></span></div>\n</code></pre>\n<p>Create debug context that will throw error on invalid WebGL operation.</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;WebGLDebugUtil&#xA0;=&#xA0;require(&apos;webgl-debug&apos;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>function&#xA0;throwOnGLError(err,&#xA0;funcName,&#xA0;args)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;throw&#xA0;WebGLDebugUtils.glEnumToString(err)&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;+&#xA0;&quot;was&#xA0;caused&#xA0;by&#xA0;call&#xA0;to&#xA0;&quot;&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;+&#xA0;funcName;</span></span></div><div class=\"line\"><span class=\"source js\"><span>};</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>gl&#xA0;=&#xA0;WebGLDebugUtils.makeDebugContext(gl,&#xA0;throwOnGLError);</span></span></div>\n</code></pre>\n<h2 id=\"tutorial\">Tutorial</h2>\n<p><a href=\"https://www.khronos.org/webgl/wiki/Debugging\">WebGL Wiki: Debugging</a></p>\n<h2 id=\"api\">API</h2>\n<h4 id=\"init-\">init()</h4>\n<p>Initializes this module. Safe to call more than once.</p>\n<h4 id=\"mightbeenum-value-\">mightBeEnum(value)</h4>\n<p>Returns true or false if value matches any WebGL enum</p>\n<h4 id=\"glenumtostring-value-\">glEnumToString(value)</h4>\n<p>Gets an string version of an WebGL enum.</p>\n<h4 id=\"glfunctionargtostring-functionname-numargs-argumentindx-value-\">glFunctionArgToString(functionName, numArgs, argumentIndx, value)</h4>\n<p>Converts the argument of a WebGL function to a string</p>\n<h4 id=\"glfunctionargstostring-functionname-args-\">glFunctionArgsToString(functionName, args)</h4>\n<p>Converts the arguments of a WebGL function to a string.</p>\n<h4 id=\"makedebugcontext-ctx-onerrorcb-onfunccallcb-\">makeDebugContext(ctx, onErrorCb, onFuncCallCb)</h4>\n<p>returns a wrapped context that calls gl.getError after every command and calls a function if the result is not NO_ERROR</p>\n<h4 id=\"makelostcontextsimulatingcanvas-canvas-\">makeLostContextSimulatingCanvas(canvas)</h4>\n<p>returns a wrapped canvas element that will simulate lost context</p>\n<h4 id=\"resettoinitialstate-gl-\">resetToInitialState(gl)</h4>\n<p>Resets a context to the initial state</p>\n<h2 id=\"license\">License</h2>\n<p>MIT, see <a href=\"http://github.com/vorg/webgl-debug/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}