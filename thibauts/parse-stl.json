{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/thibauts/parse-stl\">parse-stl</a><div class=\"contrib\"></div></h1>\n<h3 id=\"stl-ascii-and-binary-file-parser\">STL (ASCII and binary) file parser</h3>\n<p>Parses an <a href=\"http://en.wikipedia.org/wiki/STL_%28file_format%29\">STL</a> (STereoLithography) ASCII or binary buffer to a mesh compatible with <a href=\"https://github.com/mikolalysenko/simplicial-complex\">simplicial-complex*</a>. If you&apos;re looking for a streaming parser check <a href=\"https://github.com/tmpvar/stl\">this</a>.</p>\n<p>This module works well with <a href=\"https://github.com/thibauts/merge-vertices\">merge-vertices</a> to deduplicate identical vertices from different faces.</p>\n<p>* ASCII files having faces with more than 3 vertices will have to be triangulated for use with <a href=\"https://github.com/mikolalysenko/simplicial-complex\">simplicial-complex</a>. One option is using <a href=\"https://github.com/mapbox/earcut\">earcut</a>.</p>\n<h2 id=\"install\">Install</h2>\n<pre><code class=\"lang-bash\"><div class=\"line\"><span class=\"source shell\"><span>$&#xA0;npm&#xA0;install&#xA0;parse-stl</span></span></div>\n</code></pre>\n<h2 id=\"usage\">Usage</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;parseSTL&#xA0;=&#xA0;require(&apos;parse-stl&apos;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;fs&#xA0;=&#xA0;require(&apos;fs&apos;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;buf&#xA0;=&#xA0;fs.readFileSync(&apos;mesh.stl&apos;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;mesh&#xA0;=&#xA0;parseSTL(buf);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>console.log(mesh);</span></span></div><div class=\"line\"><span class=\"source js\"><span>/*</span></span></div><div class=\"line\"><span class=\"source js\"><span>{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;positions:&#xA0;[...],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;cells:&#xA0;[...],</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;faceNormals:&#xA0;[...]</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div><div class=\"line\"><span class=\"source js\"><span>*/</span></span></div>\n</code></pre>\n"}