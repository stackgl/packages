{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/wwwtyro/gl-skybox\">gl-skybox</a><div class=\"contrib\"></div></h1>\n<p>Draws a skybox into a 3D scene.</p>\n<h2 id=\"install\">Install</h2>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install&#xA0;gl-skybox</span></span></div>\n</code></pre>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;mat4&#xA0;=&#xA0;require(&apos;gl-mat4&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createCubemap&#xA0;=&#xA0;require(&apos;gl-cubemap-placeholder&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createSkybox&#xA0;=&#xA0;require(&apos;gl-skybox&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;cubemap&#xA0;=&#xA0;createCubemap(gl,&#xA0;512)</span></span></div><div class=\"line\"><span class=\"source js\"><span>cubemap.generateMipmap()</span></span></div><div class=\"line\"><span class=\"source js\"><span>cubemap.minFilter&#xA0;=&#xA0;gl.LINEAR_MIPMAP_LINEAR</span></span></div><div class=\"line\"><span class=\"source js\"><span>cubemap.magFilter&#xA0;=&#xA0;gl.LINEAR</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;skybox&#xA0;=&#xA0;createSkybox(gl,&#xA0;cubemap)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;view&#xA0;=&#xA0;mat4.create()</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;projection&#xA0;=&#xA0;mat4.create()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>mat4.lookAt(view,&#xA0;[0,&#xA0;0,&#xA0;0],&#xA0;[0,&#xA0;0,&#xA0;-1],&#xA0;[0,&#xA0;1,&#xA0;0])</span></span></div><div class=\"line\"><span class=\"source js\"><span>mat4.perspective(projection,&#xA0;Math.PI&#xA0;/&#xA0;2,&#xA0;width/height,&#xA0;0.1,&#xA0;10.0)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>skybox.draw({</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;view:&#xA0;view,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;projection:&#xA0;projection</span></span></div><div class=\"line\"><span class=\"source js\"><span>})</span></span></div>\n</code></pre>\n<h2 id=\"api\">API</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createSkybox&#xA0;=&#xA0;require(&apos;gl-skybox&apos;)</span></span></div>\n</code></pre>\n<h3 id=\"constructor\">Constructor</h3>\n<h4 id=\"var-skybox-createskybox-gl-cubemap-\"><code>var skybox = createSkybox(gl, cubemap)</code></h4>\n<p>Takes a WebGL context <code>gl</code> and a <a href=\"https://github.com/wwwtyro/gl-texture-cube\">gl-texture-cube</a>\nobject <code>cubemap</code>. Returns an object <code>skybox</code> ready for rendering into your\nscene.</p>\n<h3 id=\"methods\">Methods</h3>\n<h4 id=\"skybox-draw-camera-\"><code>skybox.draw(camera)</code></h4>\n<p>Draws the skybox into your scene.</p>\n<p>Takes a <code>camera</code> object that defines the view and projection matrices:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;view:&#xA0;gl-mat4&#xA0;matrix,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;projection:&#xA0;gl-mat4&#xA0;matrix</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<p>This function will take care of centering the skybox and projection near/far\nvalues for you, so there is no need to make a view/projection matrix specifically\nfor rendering the skybox. It will also disable depth buffer read/writes and\nthen restore them to whatever you had them set to before returning, so there&apos;s\nno need to handle that yourself.</p>\n"}