{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/wwwtyro/gl-texture-cube\">gl-texture-cube</a><div class=\"contrib\"></div></h1>\n<p>Wraps WebGL&apos;s cube texture object.</p>\n<p><em>Note: This API is experimental and will probably change to reach parity with\n<a href=\"https://github.com/stackgl/gl-texture2d\">gl-texture2d</a>.</em></p>\n<h2 id=\"install\">Install</h2>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install&#xA0;gl-texture-cube</span></span></div>\n</code></pre>\n<h2 id=\"example\">Example</h2>\n<h3 id=\"javascript\">Javascript</h3>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;Box3D&#xA0;=&#xA0;require(&apos;geo-3d-box&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;TextureCube&#xA0;=&#xA0;require(&apos;gl-texture-cube&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;boxData&#xA0;=&#xA0;Box3D({size:&#xA0;2})</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;box&#xA0;=&#xA0;Geometry(gl)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;.attr(&apos;aPosition&apos;,&#xA0;boxData.positions)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;.faces(boxData.cells)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;textures&#xA0;=&#xA0;generateCubemapTextures()</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;cubemap&#xA0;=&#xA0;TextureCube(gl,&#xA0;textures)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>program.uniforms.uTexture&#xA0;=&#xA0;cubemap.bind(0)</span></span></div><div class=\"line\"><span class=\"source js\"><span>program.uniforms.uModel&#xA0;=&#xA0;model</span></span></div><div class=\"line\"><span class=\"source js\"><span>program.uniforms.uView&#xA0;=&#xA0;view</span></span></div><div class=\"line\"><span class=\"source js\"><span>program.uniforms.uProjection&#xA0;=&#xA0;projection</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>box.draw()</span></span></div>\n</code></pre>\n<h3 id=\"vertex-shader\">Vertex Shader</h3>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>attribute</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;aPosition;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>mat4</span></span><span>&#xA0;uModel;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>mat4</span></span><span>&#xA0;uView;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>mat4</span></span><span>&#xA0;uProjection;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>varying</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;vNorm;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>void</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>main</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"support variable glsl\"><span>gl_Position</span></span><span>&#xA0;=&#xA0;uProjection&#xA0;*&#xA0;uView&#xA0;*&#xA0;uModel&#xA0;*</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>vec4</span></span><span>(</span></span><span>aPosition,&#xA0;</span><span class=\"constant numeric c\"><span>1.0</span></span><span>);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;vNorm&#xA0;=&#xA0;aPosition;</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div>\n</code></pre>\n<h3 id=\"fragment-shader\">Fragment Shader</h3>\n<pre><code class=\"lang-glsl\"><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>uniform</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>samplerCube</span></span><span>&#xA0;uTexture;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage modifier glsl\"><span>varying</span></span><span>&#xA0;</span><span class=\"storage type glsl\"><span>vec3</span></span><span>&#xA0;vNorm;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"storage type glsl\"><span>void</span></span><span class=\"meta function c\"><span class=\"punctuation whitespace function leading c\"><span>&#xA0;</span></span><span class=\"entity name function c\"><span>main</span></span><span class=\"meta parens c\"><span class=\"punctuation section parens begin c\"><span>(</span></span><span class=\"punctuation section parens end c\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta block c\"><span class=\"punctuation section block begin c\"><span>{</span></span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"support variable glsl\"><span>gl_FragColor</span></span><span>&#xA0;=</span><span class=\"meta function-call c\"><span class=\"punctuation whitespace function-call leading c\"><span>&#xA0;</span></span><span class=\"support function any-method c\"><span>textureCube</span></span><span>(</span></span><span>uTexture,&#xA0;vNorm);</span></span></span></span></div><div class=\"line\"><span class=\"source glsl\"><span class=\"meta function c\"><span class=\"meta block c\"><span class=\"punctuation section block end c\"><span>}</span></span></span></span></span></div>\n</code></pre>\n<h2 id=\"api\">API</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;createTextureCube&#xA0;=&#xA0;require(&apos;gl-texture-cube&apos;)</span></span></div>\n</code></pre>\n<h3 id=\"constructor\">Constructor</h3>\n<h4 id=\"var-cubemap-createtexturecube-gl-domelements-format-gl-rgba-type-gl-unsigned_byte-\"><code>var cubemap = createTextureCube(gl, domElements[, format=gl.RGBA, type=gl.UNSIGNED_BYTE])</code></h4>\n<p>Creates a texture from <code>domElements</code>, structured as:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;pos:&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;x:&#xA0;domElement,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;y:&#xA0;domElement,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;z:&#xA0;domElement,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;},</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;neg:&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;x:&#xA0;domElement,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;y:&#xA0;domElement,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;z:&#xA0;domElement</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;}</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<p>...where each <code>domElement</code> can be one of:</p>\n<ul>\n<li>An ImageData object</li>\n<li>An HTMLCanvas object</li>\n<li>An HTMLImage object</li>\n<li>An HTMLVideo object</li>\n</ul>\n<p>Takes a WebGL context <code>gl</code>. Optionally takes a WebGL data format <code>format</code>\nand storage type <code>type</code>.</p>\n<h3 id=\"methods\">Methods</h3>\n<h4 id=\"cubemap-bind-textureunit-\"><code>cubemap.bind([textureUnit])</code></h4>\n<p>Binds the texture. If the optional <code>textureUnit</code> is not defined then\nthe active texture is not changed.</p>\n<h4 id=\"cubemap-dispose-\"><code>cubemap.dispose()</code></h4>\n<p>Destroys the texture and releases its resources.</p>\n<h4 id=\"cubemap-generatemipmap-\"><code>cubemap.generateMipmap()</code></h4>\n<p>Generates mipmaps for the texture.</p>\n<h3 id=\"properties\">Properties</h3>\n<h4 id=\"cubemap-wrap\"><code>cubemap.wrap</code></h4>\n<p>Gets/sets the wrap behavior for the texture in both dimensions.\nDefaults to <code>[gl.CLAMP_TO_EDGE, gl.CLAMP_TO_EDGE]</code>. Example:</p>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>cubemap.wrap&#xA0;=&#xA0;[gl.REPEAT,&#xA0;gl.REPEAT]</span></span></div>\n</code></pre>\n<h4 id=\"cubemap-magfilter-cubemap-minfilter\"><code>cubemap.magFilter</code> &amp; <code>cubemap.minFilter</code></h4>\n<p>Gets/sets the magnification and minification filter. Defaults\nto <code>gl.NEAREST</code>.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>Based on <a href=\"https://github.com/stackgl/gl-texture2d\">gl-texture2d</a>.</p>\n"}