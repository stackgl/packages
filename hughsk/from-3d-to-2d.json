{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/hughsk/from-3d-to-2d\">from-3d-to-2d </a><div class=\"contrib\"></div></h1>\n<p>Take a transformation matrix like you&apos;re used to constructing with WebGL, and\nproject arbitrary 3D points onto your 2D screen.</p>\n<p>You can use this to take a point in your WebGL scene and get its onscreen\nposition on the canvas, e.g. to add DOM element overlays, or bootstrapping your\nown canvas/SVG.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://nodei.co/npm/from-3d-to-2d/\"></a></p>\n<h3 id=\"transform-out-position-matrix-\">transform(out, position, matrix)</h3>\n<p>Given a 3-element array <code>position</code> and a 16-element array <code>matrix</code>, update\nthe <code>out</code> array to contain your new 2D points &#x2013; each of them ranging from 0 to</p>\n<ol>\n<li>For example:</li>\n</ol>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;mat4&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;require(&apos;gl-matrix&apos;).mat4</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;camera&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;require(&apos;orbit-camera&apos;)()</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;transform&#xA0;&#xA0;=&#xA0;require(&apos;from-3d-to-2d&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;projection&#xA0;=&#xA0;new&#xA0;Float32Array(16)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;view&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;new&#xA0;Float32Array(16)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;pvMatrix&#xA0;&#xA0;&#xA0;=&#xA0;new&#xA0;Float32Array(16)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;point&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;=&#xA0;new&#xA0;Float32Array(2)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>function&#xA0;render()&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//&#xA0;get&#xA0;your&#xA0;camera/view&#xA0;matrix&#xA0;from&#xA0;something&#xA0;like&#xA0;orbit-camera</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;camera.view(view)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//&#xA0;perspective&#xA0;projection</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.perspective(projection</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;,&#xA0;Math.PI&#xA0;/&#xA0;4&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;//&#xA0;field&#xA0;of&#xA0;view</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;,&#xA0;canvas.width&#xA0;/&#xA0;canvas.height&#xA0;//&#xA0;aspect&#xA0;ratio</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;,&#xA0;0.00001</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;,&#xA0;10000</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//&#xA0;Combine&#xA0;your&#xA0;matrix&#xA0;transformations&#xA0;into</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//&#xA0;a&#xA0;single&#xA0;transform&#xA0;by&#xA0;multiplying&#xA0;them&#xA0;together</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;mat4.mul(pvMatrix,&#xA0;projection,&#xA0;view)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//&#xA0;get&#xA0;your&#xA0;2d&#xA0;point&#xA0;from&#xA0;your&#xA0;3d&#xA0;point:</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;transform(point,&#xA0;[0,&#xA0;0,&#xA0;0],&#xA0;pvMatrix)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;x&#xA0;=&#xA0;point[0]</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;var&#xA0;y&#xA0;=&#xA0;point[1]</span></span></div><div class=\"line\"><span class=\"source js\"><span>}</span></span></div>\n</code></pre>\n<h2 id=\"see-also\">See Also</h2>\n<ul>\n<li><a href=\"http://github.com/mikolalysenko/svg-simplicial-complex\">svg-simplicial-complex</a></li>\n<li><a href=\"http://github.com/mikolalysenko/orbit-camera\">orbit-camera</a></li>\n<li><a href=\"http://github.com/toji/gl-matrix\">gl-matrix</a></li>\n<li><a href=\"http://github.com/cgiffard/perspex\">perspex</a></li>\n</ul>\n<h2 id=\"license\">License</h2>\n<p>MIT. See <a href=\"http://github.com/hughsk/from-3d-to-2d/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}