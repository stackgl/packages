{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/ataber/primitive-cylinder\">primitive-cylinder</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://github.com/badges/stability-badges\"></a></p>\n<p><iframe scrolling=\"no\" seamless=\"seamless\" src=\"https://ataber.github.io/primitive-cylinder/\"></iframe></p>\n<p><a href=\"http://ataber.github.io/primitive-cylinder/\">(demo)</a></p>\n<p>A minimal 3D cylindrical geometry, including normals, UVs, and mesh.</p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>var&#xA0;cylinder&#xA0;=&#xA0;require(&apos;primitive-cylinder&apos;)</span></span></div><div class=\"line\"><span class=\"source js\"><span>var&#xA0;mesh&#xA0;=&#xA0;cylinder(10,&#xA0;10,&#xA0;50,&#xA0;10,&#xA0;10)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;the&#xA0;simplicial&#xA0;complex</span></span></div><div class=\"line\"><span class=\"source js\"><span>console.log(mesh.positions,&#xA0;mesh.cells)</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>//&#xA0;rendering&#xA0;attributes</span></span></div><div class=\"line\"><span class=\"source js\"><span>console.log(mesh.uvs)</span></span></div><div class=\"line\"><span class=\"source js\"><span>console.log(mesh.normals)</span></span></div>\n</code></pre>\n<h2 id=\"usage\">Usage</h2>\n<p><a href=\"https://www.npmjs.com/package/primitive-cylinder\"></a></p>\n<h4 id=\"mesh-cylinder-radiustop-radiusbottom-height-radialsegments-heightsegments-\"><code>mesh = cylinder(radiusTop, radiusBottom, height, radialSegments, heightSegments)</code></h4>\n<p>Creates a new torus with options:</p>\n<ul>\n<li><code>radiusTop</code> the radius of the cylinder at the top</li>\n<li><code>radiusBottom</code> the radius of the cylinder at the bottom</li>\n<li><code>height</code> the height of the cylinder</li>\n<li><code>radialSegments</code> the number of segments for the radial axis</li>\n<li><code>heightSegments</code> the number of segments for the height axis</li>\n</ul>\n<p>The returned mesh is an object with the following data:</p>\n<pre><code>{\n  positions: [ [x, y, z], [x, y, z], ... ],\n  cells: [ [a, b, c], [a, b, c], ... ],\n  uvs: [ [u, v], [u, v], ... ],\n  normals: [ [x, y, z], [x, y, z], ... ]\n}\n</code></pre><p>Note that you can build a cone by setting one of the radii to be zero.</p>\n<h2 id=\"contributing\">Contributing</h2>\n<p>See <a href=\"https://github.com/stackgl/contributing\">stackgl/contributing</a> for details.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>The algorithm here is from <a href=\"https://github.com/mrdoob/three.js/blob/5a24dac568520f6bf21901bf68dc4bdc2a9d8633/src/geometries/CylinderBufferGeometry.js\">ThreeJS CylinderGeometry</a>.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT. See <a href=\"http://github.com/ataber/primitive-cylinder/blob/master/LICENSE.md\">LICENSE.md</a> for details.</p>\n"}