{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/dmnsgn/canvas-screenshot\">canvas-screenshot </a><div class=\"contrib\"></div></h1>\n<p><a href=\"https://www.npmjs.com/package/canvas-screenshot\"></a>\n<a href=\"https://github.com/prettier/prettier\"></a></p>\n<p>A one trick pony package to download an image from a canvas.</p>\n<p><img src=\"https://raw.githubusercontent.com/dmnsgn/canvas-screenshot/master/screenshot.gif\" alt></p>\n<h2 id=\"installation\">Installation</h2>\n<pre><code class=\"lang-bash\"><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install&#xA0;canvas-screenshot</span></span></div>\n</code></pre>\n<p><a href=\"https://nodei.co/npm/canvas-screenshot/\"></a></p>\n<h2 id=\"usage\">Usage</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>const&#xA0;canvasScreenshot&#xA0;=&#xA0;require(&quot;canvas-screenshot&quot;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;createCanvasContext&#xA0;=&#xA0;require(&quot;canvas-context&quot;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;{&#xA0;context&#xA0;}&#xA0;=&#xA0;createCanvasContext(&quot;2d&quot;,&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;width:&#xA0;100,</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;height:&#xA0;100</span></span></div><div class=\"line\"><span class=\"source js\"><span>});</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;button&#xA0;=&#xA0;document.createElement(&quot;button&quot;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>button.addEventListener(&quot;click&quot;,&#xA0;()&#xA0;=&gt;&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;canvasScreenshot(context.canvas);</span></span></div><div class=\"line\"><span class=\"source js\"><span>});</span></span></div>\n</code></pre>\n<h2 id=\"api\">API</h2>\n<h3 id=\"canvasscreenshot-canvas-options-domstring-promiseblob\"><code>canvasScreenshot(canvas, options): DOMString | Promise&lt;Blob&gt;</code></h3>\n<p>Returns a <code>Data URI</code> or a Promise resolving with a Blob.\nSetting <code>useBlob</code> to <code>true</code> will consequently make the module async and return the latter.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>canvas</strong></td>\n<td>HTMLCanvasElement</td>\n<td></td>\n<td>The canvas element</td>\n</tr>\n<tr>\n<td><strong>options.filename</strong></td>\n<td>string?</td>\n<td><code>Screen Shot YYYY-MM-DD at HH.MM.SS.png</code></td>\n<td>File name</td>\n</tr>\n<tr>\n<td><strong>options.quality</strong></td>\n<td>number?</td>\n<td>1</td>\n<td>Quality between 0 and 1</td>\n</tr>\n<tr>\n<td><strong>options.useBlob</strong></td>\n<td>boolean?</td>\n<td>undefined</td>\n<td>Use <code>canvas.toBlob</code></td>\n</tr>\n<tr>\n<td><strong>options.download</strong></td>\n<td>boolean?</td>\n<td>true</td>\n<td>Automatically download the screenshot</td>\n</tr>\n</tbody>\n</table>\n<p>Type is inferred from the filename extension (jpg/jpeg) for <code>&quot;image/jpeg&quot;</code> and default to <code>&quot;image/png&quot;</code>.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT. See <a href=\"https://github.com/dmnsgn/canvas-screenshot/blob/master/LICENSE.md\">license file</a>.</p>\n"}