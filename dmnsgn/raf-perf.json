{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/dmnsgn/raf-perf\">raf-perf </a><div class=\"contrib\"></div></h1>\n<p><a href=\"https://www.npmjs.com/package/raf-perf\"></a>\n<a href=\"https://github.com/prettier/prettier\"></a></p>\n<p>RAF loop with an adaptive fps and performance ratio calculated from either a sample count or a sample duration. Typically used when doing intensive graphics computation in canvas.</p>\n<p><img src=\"https://raw.githubusercontent.com/dmnsgn/raf-perf/master/screenshot.gif\" alt></p>\n<h2 id=\"installation\">Installation</h2>\n<pre><code class=\"lang-bash\"><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install&#xA0;raf-perf</span></span></div>\n</code></pre>\n<p><a href=\"https://nodei.co/npm/raf-perf/\"></a></p>\n<h2 id=\"usage\">Usage</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span>const&#xA0;RafPerf&#xA0;=&#xA0;require(&quot;raf-perf&quot;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;canvas&#xA0;=&#xA0;document.createElement(&quot;canvas&quot;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;context&#xA0;=&#xA0;canvas.getContext(&quot;2d&quot;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;engine&#xA0;=&#xA0;new&#xA0;RafPerf();</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>engine.on(&quot;tick&quot;,&#xA0;dt&#xA0;=&gt;&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//&#xA0;Clear</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;context.clearRect(0,&#xA0;0,&#xA0;canvas.width,&#xA0;canvas.height);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//&#xA0;Draw</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;//&#xA0;...</span></span></div><div class=\"line\"><span class=\"source js\"><span>});</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>engine.on(&quot;perf&quot;,&#xA0;ratio&#xA0;=&gt;&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;if&#xA0;(!ratio)&#xA0;return;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;console.log(`Performance&#xA0;ratio:&#xA0;${ratio}`);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;if&#xA0;(ratio&#xA0;&lt;&#xA0;0.9)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;console.log(&quot;Too&#xA0;many&#xA0;draws&quot;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;}&#xA0;else&#xA0;if&#xA0;(ratio&#xA0;&gt;=&#xA0;0.9&#xA0;&amp;&amp;&#xA0;rectCount&#xA0;&lt;&#xA0;maxRectCount)&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;console.log(&quot;Draw&#xA0;more&quot;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;}</span></span></div><div class=\"line\"><span class=\"source js\"><span>});</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>engine.start();</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>const&#xA0;destroy&#xA0;=&#xA0;()&#xA0;=&gt;&#xA0;{</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;if&#xA0;(engine.isRunning)&#xA0;engine.stop();</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;engine.removeAllListeners(&quot;tick&quot;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;engine.removeAllListeners(&quot;perf&quot;);</span></span></div><div class=\"line\"><span class=\"source js\"><span>};</span></span></div>\n</code></pre>\n<h2 id=\"api\">API</h2>\n<h3 id=\"const-engine-new-rafperf-options-\"><code>const engine = new RafPerf(options)</code></h3>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>options.fps</strong></td>\n<td>number?</td>\n<td>60</td>\n<td>Throttle fps</td>\n</tr>\n<tr>\n<td><strong>options.performances.enabled</strong></td>\n<td>boolean?</td>\n<td>true</td>\n<td>Evaluate performances</td>\n</tr>\n<tr>\n<td><strong>options.performances.samplesCount</strong></td>\n<td>number?</td>\n<td>200</td>\n<td>Number of samples to evaluate performances</td>\n</tr>\n<tr>\n<td><strong>options.performances.sampleDuration</strong></td>\n<td>number?</td>\n<td>4000</td>\n<td>Duration of sample to evaluate performances</td>\n</tr>\n</tbody>\n</table>\n<p><code>samplesCount</code> and <code>sampleDuration</code> are used concurrently. Set <code>sampleDuration</code> to a <em>falsy</em> value if you only want to sample performances only from a number of frames.</p>\n<h3 id=\"engine-start-\"><code>engine.start()</code></h3>\n<p>Run the <code>requestAnimationFrame</code> loop and start checking performances if <code>options.performances.enabled</code> is <code>true</code>.</p>\n<h3 id=\"engine-stop-\"><code>engine.stop()</code></h3>\n<p>Run <code>cancelAnimationFrame</code> if necessary and reset the engine.</p>\n<h3 id=\"engine-on-tick-dt-number-void-\"><code>engine.on(&quot;tick&quot;, (dt: number) =&gt; void)</code></h3>\n<p>Event triggered on tick, throttled by <code>options.fps</code>.</p>\n<h3 id=\"engine-on-perf-ratio-number-void-\"><code>engine.on(&quot;perf&quot;, (ratio: number) =&gt; void)</code></h3>\n<p>Event triggered when performance ratio (<code>this.frameDuration / averageDeltaTime</code>) is updated. Understand a ratio of the fps, for instance for a fps value of 24, <code>ratio &lt; 0.5</code> means that the averaged <code>fps &lt; 12</code> and you should probably do something about it.</p>\n<h2 id=\"license\">License</h2>\n<p>MIT. See <a href=\"https://github.com/dmnsgn/raf-perf/blob/master/LICENSE.md\">license file</a>.</p>\n"}